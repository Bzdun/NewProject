//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_AuthoringTable_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "AuthoringTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.AuthoringTable), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_AuthoringTable_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "AuthoringTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.AuthoringTable), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_AuthoringTableRolePermission_AuthoringTable", "AuthoringTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.AuthoringTable), "AuthoringTableRolePermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.AuthoringTableRolePermission), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_AuthoringTableRolePermission_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Role), "AuthoringTableRolePermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.AuthoringTableRolePermission), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_AuthoringTableRolePermission_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "AuthoringTableRolePermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.AuthoringTableRolePermission), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_AuthoringTableRolePermission_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "AuthoringTableRolePermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.AuthoringTableRolePermission), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ContentItem_LicenseType", "LicenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.LicenseType), "ContentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ContentItem), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ContentItem_MediaType", "MediaType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.MediaType), "ContentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ContentItem), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ContentItem_Regime", "Regime", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Regime), "ContentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ContentItem), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ContentItem_Threshold", "Threshold", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Threshold), "ContentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ContentItem), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ContentItem_TimeUnit", "TimeUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.TimeUnit), "ContentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ContentItem), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ContentItem_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "ContentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ContentItem), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ContentItem_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "ContentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ContentItem), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ContentKeyword_ContentItem", "ContentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.ContentItem), "ContentKeyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ContentKeyword), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ContentKeyword_Keyword", "Keyword", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Keyword), "ContentKeyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ContentKeyword), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ContentKeyword_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "ContentKeyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ContentKeyword), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ContentKeyword_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "ContentKeyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ContentKeyword), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Keyword_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Keyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Keyword), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Keyword_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Keyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Keyword), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_LicenseType_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "LicenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.LicenseType), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_LicenseType_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "LicenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.LicenseType), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_MediaType_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "MediaType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.MediaType), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_MediaType_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "MediaType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.MediaType), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Permission_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Permission), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Permission_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Permission), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Regime_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Regime", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Regime), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Regime_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Regime", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Regime), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Role_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Role), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Role_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Role), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_User_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.User), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Threshold_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Threshold", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Threshold), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Threshold_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Threshold", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Threshold), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_TimeUnit_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "TimeUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.TimeUnit), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_TimeUnit_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "TimeUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.TimeUnit), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_User_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "User1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.User), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_User_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "User1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.User), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_CitationType_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "CitationType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.CitationType), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_CitationType_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "CitationType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.CitationType), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Reference_CitationType", "CitationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.CitationType), "Reference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Reference), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ExhibitContentItem_ContentItem", "ContentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.ContentItem), "ExhibitContentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ExhibitContentItem), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Exhibit_Regime", "Regime", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Regime), "Exhibit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Exhibit), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Exhibit_Threshold", "Threshold", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Threshold), "Exhibit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Exhibit), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Exhibit_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Exhibit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Exhibit), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Exhibit_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Exhibit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Exhibit), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ExhibitContentItem_Exhibit", "Exhibit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Exhibit), "ExhibitContentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ExhibitContentItem), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ExhibitKeyword_Exhibit", "Exhibit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Exhibit), "ExhibitKeyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ExhibitKeyword), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_TimelineExhibit_Exhibit", "Exhibit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Exhibit), "TimelineExhibit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.TimelineExhibit), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ExhibitContentItem_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "ExhibitContentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ExhibitContentItem), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ExhibitContentItem_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "ExhibitContentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ExhibitContentItem), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ExhibitKeyword_Keyword", "Keyword", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Keyword), "ExhibitKeyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ExhibitKeyword), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ExhibitKeyword_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "ExhibitKeyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ExhibitKeyword), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ExhibitKeyword_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "ExhibitKeyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ExhibitKeyword), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ReferenceKeyword_Keyword", "Keyword", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Keyword), "ReferenceKeyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ReferenceKeyword), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Reference_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Reference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Reference), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Reference_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Reference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Reference), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ReferenceKeyword_Reference", "Reference", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Reference), "ReferenceKeyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ReferenceKeyword), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ReferenceKeyword_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "ReferenceKeyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ReferenceKeyword), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ReferenceKeyword_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "ReferenceKeyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ReferenceKeyword), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Timeline_Regime", "Regime", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Regime), "Timeline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Timeline), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Timeline_Threshold", "Threshold", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Threshold), "Timeline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Timeline), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Timeline_Timeline", "Timeline", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.Timeline), "Timeline1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Timeline), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Timeline_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Timeline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Timeline), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Timeline_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Timeline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Timeline), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_TimelineExhibit_Timeline", "Timeline", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Timeline), "TimelineExhibit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.TimelineExhibit), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_TimelineExhibit_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "TimelineExhibit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.TimelineExhibit), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_TimelineExhibit_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "TimelineExhibit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.TimelineExhibit), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_BookMark_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "BookMark", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.BookMark), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_BookMark_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "BookMark", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.BookMark), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_TourBookmark_Bookmark", "BookMark", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.BookMark), "TourBookmark", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.TourBookmark), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Tour_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Tour", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Tour), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Tour_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "Tour", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Tour), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_TourBookmark_Tour", "Tour", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Tour), "TourBookmark", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.TourBookmark), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_TourBookmark_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "TourBookmark", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.TourBookmark), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_TourBookmark_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "TourBookmark", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.TourBookmark), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Exhibit_TimeUnit", "TimeUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.TimeUnit), "Exhibit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Exhibit), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Timeline_FromTimeUnit", "TimeUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.TimeUnit), "Timeline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Timeline), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Timeline_ToTimeUnit", "TimeUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.TimeUnit), "Timeline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Timeline), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Threshold_FromTimeUnit", "TimeUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.TimeUnit), "Threshold", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Threshold), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ExhibitReference_Exhibit", "Exhibit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Exhibit), "ExhibitReference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ExhibitReferenceEntity), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ExhibitReference_Reference", "Reference", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authoring.WebRole.Models.Reference), "ExhibitReference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ExhibitReferenceEntity), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ExhibitReference_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "ExhibitReference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ExhibitReferenceEntity), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_ExhibitReference_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.User), "ExhibitReference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.ExhibitReferenceEntity), true)]
[assembly: EdmRelationshipAttribute("ChronozoomModel", "FK_Threshold_Bookmark", "BookMark", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Authoring.WebRole.Models.BookMark), "Threshold", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authoring.WebRole.Models.Threshold), true)]

#endregion

namespace Authoring.WebRole.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ChronozoomEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ChronozoomEntities object using the connection string found in the 'ChronozoomEntities' section of the application configuration file.
        /// </summary>
        public ChronozoomEntities() : base("name=ChronozoomEntities", "ChronozoomEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ChronozoomEntities object.
        /// </summary>
        public ChronozoomEntities(string connectionString) : base(connectionString, "ChronozoomEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ChronozoomEntities object.
        /// </summary>
        public ChronozoomEntities(EntityConnection connection) : base(connection, "ChronozoomEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuthoringTable> AuthoringTables
        {
            get
            {
                if ((_AuthoringTables == null))
                {
                    _AuthoringTables = base.CreateObjectSet<AuthoringTable>("AuthoringTables");
                }
                return _AuthoringTables;
            }
        }
        private ObjectSet<AuthoringTable> _AuthoringTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuthoringTableRolePermission> AuthoringTableRolePermissions
        {
            get
            {
                if ((_AuthoringTableRolePermissions == null))
                {
                    _AuthoringTableRolePermissions = base.CreateObjectSet<AuthoringTableRolePermission>("AuthoringTableRolePermissions");
                }
                return _AuthoringTableRolePermissions;
            }
        }
        private ObjectSet<AuthoringTableRolePermission> _AuthoringTableRolePermissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentItem> ContentItems
        {
            get
            {
                if ((_ContentItems == null))
                {
                    _ContentItems = base.CreateObjectSet<ContentItem>("ContentItems");
                }
                return _ContentItems;
            }
        }
        private ObjectSet<ContentItem> _ContentItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentKeyword> ContentKeywords
        {
            get
            {
                if ((_ContentKeywords == null))
                {
                    _ContentKeywords = base.CreateObjectSet<ContentKeyword>("ContentKeywords");
                }
                return _ContentKeywords;
            }
        }
        private ObjectSet<ContentKeyword> _ContentKeywords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Keyword> Keywords
        {
            get
            {
                if ((_Keywords == null))
                {
                    _Keywords = base.CreateObjectSet<Keyword>("Keywords");
                }
                return _Keywords;
            }
        }
        private ObjectSet<Keyword> _Keywords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LicenseType> LicenseTypes
        {
            get
            {
                if ((_LicenseTypes == null))
                {
                    _LicenseTypes = base.CreateObjectSet<LicenseType>("LicenseTypes");
                }
                return _LicenseTypes;
            }
        }
        private ObjectSet<LicenseType> _LicenseTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MediaType> MediaTypes
        {
            get
            {
                if ((_MediaTypes == null))
                {
                    _MediaTypes = base.CreateObjectSet<MediaType>("MediaTypes");
                }
                return _MediaTypes;
            }
        }
        private ObjectSet<MediaType> _MediaTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Regime> Regimes
        {
            get
            {
                if ((_Regimes == null))
                {
                    _Regimes = base.CreateObjectSet<Regime>("Regimes");
                }
                return _Regimes;
            }
        }
        private ObjectSet<Regime> _Regimes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Threshold> Thresholds
        {
            get
            {
                if ((_Thresholds == null))
                {
                    _Thresholds = base.CreateObjectSet<Threshold>("Thresholds");
                }
                return _Thresholds;
            }
        }
        private ObjectSet<Threshold> _Thresholds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TimeUnit> TimeUnits
        {
            get
            {
                if ((_TimeUnits == null))
                {
                    _TimeUnits = base.CreateObjectSet<TimeUnit>("TimeUnits");
                }
                return _TimeUnits;
            }
        }
        private ObjectSet<TimeUnit> _TimeUnits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CitationType> CitationTypes
        {
            get
            {
                if ((_CitationTypes == null))
                {
                    _CitationTypes = base.CreateObjectSet<CitationType>("CitationTypes");
                }
                return _CitationTypes;
            }
        }
        private ObjectSet<CitationType> _CitationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Exhibit> Exhibits
        {
            get
            {
                if ((_Exhibits == null))
                {
                    _Exhibits = base.CreateObjectSet<Exhibit>("Exhibits");
                }
                return _Exhibits;
            }
        }
        private ObjectSet<Exhibit> _Exhibits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExhibitContentItem> ExhibitContentItems
        {
            get
            {
                if ((_ExhibitContentItems == null))
                {
                    _ExhibitContentItems = base.CreateObjectSet<ExhibitContentItem>("ExhibitContentItems");
                }
                return _ExhibitContentItems;
            }
        }
        private ObjectSet<ExhibitContentItem> _ExhibitContentItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExhibitKeyword> ExhibitKeywords
        {
            get
            {
                if ((_ExhibitKeywords == null))
                {
                    _ExhibitKeywords = base.CreateObjectSet<ExhibitKeyword>("ExhibitKeywords");
                }
                return _ExhibitKeywords;
            }
        }
        private ObjectSet<ExhibitKeyword> _ExhibitKeywords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reference> References
        {
            get
            {
                if ((_References == null))
                {
                    _References = base.CreateObjectSet<Reference>("References");
                }
                return _References;
            }
        }
        private ObjectSet<Reference> _References;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReferenceKeyword> ReferenceKeywords
        {
            get
            {
                if ((_ReferenceKeywords == null))
                {
                    _ReferenceKeywords = base.CreateObjectSet<ReferenceKeyword>("ReferenceKeywords");
                }
                return _ReferenceKeywords;
            }
        }
        private ObjectSet<ReferenceKeyword> _ReferenceKeywords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Timeline> Timelines
        {
            get
            {
                if ((_Timelines == null))
                {
                    _Timelines = base.CreateObjectSet<Timeline>("Timelines");
                }
                return _Timelines;
            }
        }
        private ObjectSet<Timeline> _Timelines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TimelineExhibit> TimelineExhibits
        {
            get
            {
                if ((_TimelineExhibits == null))
                {
                    _TimelineExhibits = base.CreateObjectSet<TimelineExhibit>("TimelineExhibits");
                }
                return _TimelineExhibits;
            }
        }
        private ObjectSet<TimelineExhibit> _TimelineExhibits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BookMark> BookMarks
        {
            get
            {
                if ((_BookMarks == null))
                {
                    _BookMarks = base.CreateObjectSet<BookMark>("BookMarks");
                }
                return _BookMarks;
            }
        }
        private ObjectSet<BookMark> _BookMarks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tour> Tours
        {
            get
            {
                if ((_Tours == null))
                {
                    _Tours = base.CreateObjectSet<Tour>("Tours");
                }
                return _Tours;
            }
        }
        private ObjectSet<Tour> _Tours;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TourBookmark> TourBookmarks
        {
            get
            {
                if ((_TourBookmarks == null))
                {
                    _TourBookmarks = base.CreateObjectSet<TourBookmark>("TourBookmarks");
                }
                return _TourBookmarks;
            }
        }
        private ObjectSet<TourBookmark> _TourBookmarks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExhibitReferenceEntity> ExhibitReferenceEntities
        {
            get
            {
                if ((_ExhibitReferenceEntities == null))
                {
                    _ExhibitReferenceEntities = base.CreateObjectSet<ExhibitReferenceEntity>("ExhibitReferenceEntities");
                }
                return _ExhibitReferenceEntities;
            }
        }
        private ObjectSet<ExhibitReferenceEntity> _ExhibitReferenceEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CZSystemVersion> CZSystemVersions
        {
            get
            {
                if ((_CZSystemVersions == null))
                {
                    _CZSystemVersions = base.CreateObjectSet<CZSystemVersion>("CZSystemVersions");
                }
                return _CZSystemVersions;
            }
        }
        private ObjectSet<CZSystemVersion> _CZSystemVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CZVersion> CZVersions
        {
            get
            {
                if ((_CZVersions == null))
                {
                    _CZVersions = base.CreateObjectSet<CZVersion>("CZVersions");
                }
                return _CZVersions;
            }
        }
        private ObjectSet<CZVersion> _CZVersions;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuthoringTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthoringTables(AuthoringTable authoringTable)
        {
            base.AddObject("AuthoringTables", authoringTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuthoringTableRolePermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthoringTableRolePermissions(AuthoringTableRolePermission authoringTableRolePermission)
        {
            base.AddObject("AuthoringTableRolePermissions", authoringTableRolePermission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentItems(ContentItem contentItem)
        {
            base.AddObject("ContentItems", contentItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentKeywords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentKeywords(ContentKeyword contentKeyword)
        {
            base.AddObject("ContentKeywords", contentKeyword);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Keywords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKeywords(Keyword keyword)
        {
            base.AddObject("Keywords", keyword);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LicenseTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLicenseTypes(LicenseType licenseType)
        {
            base.AddObject("LicenseTypes", licenseType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MediaTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMediaTypes(MediaType mediaType)
        {
            base.AddObject("MediaTypes", mediaType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Regimes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegimes(Regime regime)
        {
            base.AddObject("Regimes", regime);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Thresholds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToThresholds(Threshold threshold)
        {
            base.AddObject("Thresholds", threshold);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TimeUnits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimeUnits(TimeUnit timeUnit)
        {
            base.AddObject("TimeUnits", timeUnit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CitationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCitationTypes(CitationType citationType)
        {
            base.AddObject("CitationTypes", citationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Exhibits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExhibits(Exhibit exhibit)
        {
            base.AddObject("Exhibits", exhibit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExhibitContentItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExhibitContentItems(ExhibitContentItem exhibitContentItem)
        {
            base.AddObject("ExhibitContentItems", exhibitContentItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExhibitKeywords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExhibitKeywords(ExhibitKeyword exhibitKeyword)
        {
            base.AddObject("ExhibitKeywords", exhibitKeyword);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the References EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReferences(Reference reference)
        {
            base.AddObject("References", reference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReferenceKeywords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReferenceKeywords(ReferenceKeyword referenceKeyword)
        {
            base.AddObject("ReferenceKeywords", referenceKeyword);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Timelines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimelines(Timeline timeline)
        {
            base.AddObject("Timelines", timeline);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TimelineExhibits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimelineExhibits(TimelineExhibit timelineExhibit)
        {
            base.AddObject("TimelineExhibits", timelineExhibit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BookMarks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBookMarks(BookMark bookMark)
        {
            base.AddObject("BookMarks", bookMark);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tours EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTours(Tour tour)
        {
            base.AddObject("Tours", tour);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TourBookmarks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTourBookmarks(TourBookmark tourBookmark)
        {
            base.AddObject("TourBookmarks", tourBookmark);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExhibitReferenceEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExhibitReferenceEntities(ExhibitReferenceEntity exhibitReferenceEntity)
        {
            base.AddObject("ExhibitReferenceEntities", exhibitReferenceEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CZSystemVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCZSystemVersions(CZSystemVersion cZSystemVersion)
        {
            base.AddObject("CZSystemVersions", cZSystemVersion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CZVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCZVersions(CZVersion cZVersion)
        {
            base.AddObject("CZVersions", cZVersion);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int GenerateVersion()
        {
            return base.ExecuteFunction("GenerateVersion");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="stagingVersion">No Metadata Documentation available.</param>
        /// <param name="isStaging">No Metadata Documentation available.</param>
        public int Publish(Nullable<global::System.Int32> stagingVersion, Nullable<global::System.Int32> isStaging)
        {
            ObjectParameter stagingVersionParameter;
            if (stagingVersion.HasValue)
            {
                stagingVersionParameter = new ObjectParameter("StagingVersion", stagingVersion);
            }
            else
            {
                stagingVersionParameter = new ObjectParameter("StagingVersion", typeof(global::System.Int32));
            }
    
            ObjectParameter isStagingParameter;
            if (isStaging.HasValue)
            {
                isStagingParameter = new ObjectParameter("IsStaging", isStaging);
            }
            else
            {
                isStagingParameter = new ObjectParameter("IsStaging", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("Publish", stagingVersionParameter, isStagingParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="versionNumber">No Metadata Documentation available.</param>
        public int RollToVersion(Nullable<global::System.Int32> versionNumber)
        {
            ObjectParameter versionNumberParameter;
            if (versionNumber.HasValue)
            {
                versionNumberParameter = new ObjectParameter("VersionNumber", versionNumber);
            }
            else
            {
                versionNumberParameter = new ObjectParameter("VersionNumber", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("RollToVersion", versionNumberParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="AuthoringTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuthoringTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuthoringTable object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="authoringTable1">Initial value of the AuthoringTable1 property.</param>
        public static AuthoringTable CreateAuthoringTable(global::System.Guid id, global::System.String authoringTable1)
        {
            AuthoringTable authoringTable = new AuthoringTable();
            authoringTable.ID = id;
            authoringTable.AuthoringTable1 = authoringTable1;
            return authoringTable;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuthoringTable1
        {
            get
            {
                return _AuthoringTable1;
            }
            set
            {
                OnAuthoringTable1Changing(value);
                ReportPropertyChanging("AuthoringTable1");
                _AuthoringTable1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuthoringTable1");
                OnAuthoringTable1Changed();
            }
        }
        private global::System.String _AuthoringTable1;
        partial void OnAuthoringTable1Changing(global::System.String value);
        partial void OnAuthoringTable1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_AuthoringTable_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_AuthoringTable_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_AuthoringTable_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_AuthoringTable_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_AuthoringTable_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_AuthoringTable_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_AuthoringTable_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_AuthoringTable_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_AuthoringTable_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_AuthoringTable_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_AuthoringTableRolePermission_AuthoringTable", "AuthoringTableRolePermission")]
        public EntityCollection<AuthoringTableRolePermission> AuthoringTableRolePermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthoringTableRolePermission>("ChronozoomModel.FK_AuthoringTableRolePermission_AuthoringTable", "AuthoringTableRolePermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthoringTableRolePermission>("ChronozoomModel.FK_AuthoringTableRolePermission_AuthoringTable", "AuthoringTableRolePermission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="AuthoringTableRolePermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuthoringTableRolePermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuthoringTableRolePermission object.
        /// </summary>
        /// <param name="authoringTableRolePermissionID">Initial value of the AuthoringTableRolePermissionID property.</param>
        /// <param name="authoringTableID">Initial value of the AuthoringTableID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="permission">Initial value of the Permission property.</param>
        public static AuthoringTableRolePermission CreateAuthoringTableRolePermission(global::System.Guid authoringTableRolePermissionID, global::System.Guid authoringTableID, global::System.Guid roleID, global::System.Byte permission)
        {
            AuthoringTableRolePermission authoringTableRolePermission = new AuthoringTableRolePermission();
            authoringTableRolePermission.AuthoringTableRolePermissionID = authoringTableRolePermissionID;
            authoringTableRolePermission.AuthoringTableID = authoringTableID;
            authoringTableRolePermission.RoleID = roleID;
            authoringTableRolePermission.Permission = permission;
            return authoringTableRolePermission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AuthoringTableRolePermissionID
        {
            get
            {
                return _AuthoringTableRolePermissionID;
            }
            set
            {
                if (_AuthoringTableRolePermissionID != value)
                {
                    OnAuthoringTableRolePermissionIDChanging(value);
                    ReportPropertyChanging("AuthoringTableRolePermissionID");
                    _AuthoringTableRolePermissionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AuthoringTableRolePermissionID");
                    OnAuthoringTableRolePermissionIDChanged();
                }
            }
        }
        private global::System.Guid _AuthoringTableRolePermissionID;
        partial void OnAuthoringTableRolePermissionIDChanging(global::System.Guid value);
        partial void OnAuthoringTableRolePermissionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AuthoringTableID
        {
            get
            {
                return _AuthoringTableID;
            }
            set
            {
                OnAuthoringTableIDChanging(value);
                ReportPropertyChanging("AuthoringTableID");
                _AuthoringTableID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuthoringTableID");
                OnAuthoringTableIDChanged();
            }
        }
        private global::System.Guid _AuthoringTableID;
        partial void OnAuthoringTableIDChanging(global::System.Guid value);
        partial void OnAuthoringTableIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Guid _RoleID;
        partial void OnRoleIDChanging(global::System.Guid value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Permission
        {
            get
            {
                return _Permission;
            }
            set
            {
                OnPermissionChanging(value);
                ReportPropertyChanging("Permission");
                _Permission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Permission");
                OnPermissionChanged();
            }
        }
        private global::System.Byte _Permission;
        partial void OnPermissionChanging(global::System.Byte value);
        partial void OnPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_AuthoringTableRolePermission_AuthoringTable", "AuthoringTable")]
        public AuthoringTable AuthoringTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuthoringTable>("ChronozoomModel.FK_AuthoringTableRolePermission_AuthoringTable", "AuthoringTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuthoringTable>("ChronozoomModel.FK_AuthoringTableRolePermission_AuthoringTable", "AuthoringTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AuthoringTable> AuthoringTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuthoringTable>("ChronozoomModel.FK_AuthoringTableRolePermission_AuthoringTable", "AuthoringTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AuthoringTable>("ChronozoomModel.FK_AuthoringTableRolePermission_AuthoringTable", "AuthoringTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_AuthoringTableRolePermission_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ChronozoomModel.FK_AuthoringTableRolePermission_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ChronozoomModel.FK_AuthoringTableRolePermission_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ChronozoomModel.FK_AuthoringTableRolePermission_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("ChronozoomModel.FK_AuthoringTableRolePermission_Role", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_AuthoringTableRolePermission_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_AuthoringTableRolePermission_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_AuthoringTableRolePermission_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_AuthoringTableRolePermission_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_AuthoringTableRolePermission_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_AuthoringTableRolePermission_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_AuthoringTableRolePermission_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_AuthoringTableRolePermission_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_AuthoringTableRolePermission_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_AuthoringTableRolePermission_User1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="BookMark")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BookMark : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BookMark object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="uRL">Initial value of the URL property.</param>
        public static BookMark CreateBookMark(global::System.Guid id, global::System.String name, global::System.String uRL)
        {
            BookMark bookMark = new BookMark();
            bookMark.ID = id;
            bookMark.Name = name;
            bookMark.URL = uRL;
            return bookMark;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LapseTime
        {
            get
            {
                return _LapseTime;
            }
            set
            {
                OnLapseTimeChanging(value);
                ReportPropertyChanging("LapseTime");
                _LapseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LapseTime");
                OnLapseTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _LapseTime;
        partial void OnLapseTimeChanging(Nullable<global::System.Int32> value);
        partial void OnLapseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVisible
        {
            get
            {
                return _IsVisible;
            }
            set
            {
                OnIsVisibleChanging(value);
                ReportPropertyChanging("IsVisible");
                _IsVisible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVisible");
                OnIsVisibleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsVisible;
        partial void OnIsVisibleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVisibleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_BookMark_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_BookMark_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_BookMark_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_BookMark_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_BookMark_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_BookMark_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_BookMark_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_BookMark_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_BookMark_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_BookMark_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TourBookmark_Bookmark", "TourBookmark")]
        public EntityCollection<TourBookmark> TourBookmarks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TourBookmark>("ChronozoomModel.FK_TourBookmark_Bookmark", "TourBookmark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TourBookmark>("ChronozoomModel.FK_TourBookmark_Bookmark", "TourBookmark", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Threshold_Bookmark", "Threshold")]
        public EntityCollection<Threshold> Thresholds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Threshold>("ChronozoomModel.FK_Threshold_Bookmark", "Threshold");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Threshold>("ChronozoomModel.FK_Threshold_Bookmark", "Threshold", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="CitationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CitationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CitationType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="citationType1">Initial value of the CitationType1 property.</param>
        public static CitationType CreateCitationType(global::System.Guid id, global::System.String citationType1)
        {
            CitationType citationType = new CitationType();
            citationType.ID = id;
            citationType.CitationType1 = citationType1;
            return citationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CitationType1
        {
            get
            {
                return _CitationType1;
            }
            set
            {
                OnCitationType1Changing(value);
                ReportPropertyChanging("CitationType1");
                _CitationType1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CitationType1");
                OnCitationType1Changed();
            }
        }
        private global::System.String _CitationType1;
        partial void OnCitationType1Changing(global::System.String value);
        partial void OnCitationType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_CitationType_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_CitationType_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_CitationType_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_CitationType_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_CitationType_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_CitationType_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_CitationType_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_CitationType_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_CitationType_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_CitationType_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Reference_CitationType", "Reference")]
        public EntityCollection<Reference> References
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reference>("ChronozoomModel.FK_Reference_CitationType", "Reference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reference>("ChronozoomModel.FK_Reference_CitationType", "Reference", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="ContentItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentItem object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="caption">Initial value of the Caption property.</param>
        /// <param name="topic">Initial value of the Topic property.</param>
        /// <param name="mediaTypeID">Initial value of the MediaTypeID property.</param>
        /// <param name="thresholdID">Initial value of the ThresholdID property.</param>
        /// <param name="regimeID">Initial value of the RegimeID property.</param>
        /// <param name="mediaBlobURL">Initial value of the MediaBlobURL property.</param>
        /// <param name="timeUnitID">Initial value of the TimeUnitID property.</param>
        /// <param name="licenseTypeID">Initial value of the LicenseTypeID property.</param>
        /// <param name="uniqueID">Initial value of the UniqueID property.</param>
        public static ContentItem CreateContentItem(global::System.Guid id, global::System.String title, global::System.String caption, global::System.String topic, global::System.Guid mediaTypeID, global::System.Guid thresholdID, global::System.Guid regimeID, global::System.String mediaBlobURL, global::System.Guid timeUnitID, global::System.Guid licenseTypeID, global::System.Int32 uniqueID)
        {
            ContentItem contentItem = new ContentItem();
            contentItem.ID = id;
            contentItem.Title = title;
            contentItem.Caption = caption;
            contentItem.Topic = topic;
            contentItem.MediaTypeID = mediaTypeID;
            contentItem.ThresholdID = thresholdID;
            contentItem.RegimeID = regimeID;
            contentItem.MediaBlobURL = mediaBlobURL;
            contentItem.TimeUnitID = timeUnitID;
            contentItem.LicenseTypeID = licenseTypeID;
            contentItem.UniqueID = uniqueID;
            return contentItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Topic
        {
            get
            {
                return _Topic;
            }
            set
            {
                OnTopicChanging(value);
                ReportPropertyChanging("Topic");
                _Topic = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Topic");
                OnTopicChanged();
            }
        }
        private global::System.String _Topic;
        partial void OnTopicChanging(global::System.String value);
        partial void OnTopicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MediaTypeID
        {
            get
            {
                return _MediaTypeID;
            }
            set
            {
                OnMediaTypeIDChanging(value);
                ReportPropertyChanging("MediaTypeID");
                _MediaTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MediaTypeID");
                OnMediaTypeIDChanged();
            }
        }
        private global::System.Guid _MediaTypeID;
        partial void OnMediaTypeIDChanging(global::System.Guid value);
        partial void OnMediaTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ThresholdID
        {
            get
            {
                return _ThresholdID;
            }
            set
            {
                OnThresholdIDChanging(value);
                ReportPropertyChanging("ThresholdID");
                _ThresholdID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThresholdID");
                OnThresholdIDChanged();
            }
        }
        private global::System.Guid _ThresholdID;
        partial void OnThresholdIDChanging(global::System.Guid value);
        partial void OnThresholdIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RegimeID
        {
            get
            {
                return _RegimeID;
            }
            set
            {
                OnRegimeIDChanging(value);
                ReportPropertyChanging("RegimeID");
                _RegimeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegimeID");
                OnRegimeIDChanged();
            }
        }
        private global::System.Guid _RegimeID;
        partial void OnRegimeIDChanging(global::System.Guid value);
        partial void OnRegimeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MediaBlobURL
        {
            get
            {
                return _MediaBlobURL;
            }
            set
            {
                OnMediaBlobURLChanging(value);
                ReportPropertyChanging("MediaBlobURL");
                _MediaBlobURL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MediaBlobURL");
                OnMediaBlobURLChanged();
            }
        }
        private global::System.String _MediaBlobURL;
        partial void OnMediaBlobURLChanging(global::System.String value);
        partial void OnMediaBlobURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TimeUnitID
        {
            get
            {
                return _TimeUnitID;
            }
            set
            {
                OnTimeUnitIDChanging(value);
                ReportPropertyChanging("TimeUnitID");
                _TimeUnitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeUnitID");
                OnTimeUnitIDChanged();
            }
        }
        private global::System.Guid _TimeUnitID;
        partial void OnTimeUnitIDChanging(global::System.Guid value);
        partial void OnTimeUnitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> ContentDate
        {
            get
            {
                return _ContentDate;
            }
            set
            {
                OnContentDateChanging(value);
                ReportPropertyChanging("ContentDate");
                _ContentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentDate");
                OnContentDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _ContentDate;
        partial void OnContentDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnContentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ContentYear
        {
            get
            {
                return _ContentYear;
            }
            set
            {
                OnContentYearChanging(value);
                ReportPropertyChanging("ContentYear");
                _ContentYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentYear");
                OnContentYearChanged();
            }
        }
        private Nullable<global::System.Decimal> _ContentYear;
        partial void OnContentYearChanging(Nullable<global::System.Decimal> value);
        partial void OnContentYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MediaSource
        {
            get
            {
                return _MediaSource;
            }
            set
            {
                OnMediaSourceChanging(value);
                ReportPropertyChanging("MediaSource");
                _MediaSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MediaSource");
                OnMediaSourceChanged();
            }
        }
        private global::System.String _MediaSource;
        partial void OnMediaSourceChanging(global::System.String value);
        partial void OnMediaSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Attribution
        {
            get
            {
                return _Attribution;
            }
            set
            {
                OnAttributionChanging(value);
                ReportPropertyChanging("Attribution");
                _Attribution = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Attribution");
                OnAttributionChanged();
            }
        }
        private global::System.String _Attribution;
        partial void OnAttributionChanging(global::System.String value);
        partial void OnAttributionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseTypeID
        {
            get
            {
                return _LicenseTypeID;
            }
            set
            {
                OnLicenseTypeIDChanging(value);
                ReportPropertyChanging("LicenseTypeID");
                _LicenseTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseTypeID");
                OnLicenseTypeIDChanged();
            }
        }
        private global::System.Guid _LicenseTypeID;
        partial void OnLicenseTypeIDChanging(global::System.Guid value);
        partial void OnLicenseTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVisible
        {
            get
            {
                return _IsVisible;
            }
            set
            {
                OnIsVisibleChanging(value);
                ReportPropertyChanging("IsVisible");
                _IsVisible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVisible");
                OnIsVisibleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsVisible;
        partial void OnIsVisibleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UniqueID
        {
            get
            {
                return _UniqueID;
            }
            set
            {
                OnUniqueIDChanging(value);
                ReportPropertyChanging("UniqueID");
                _UniqueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueID");
                OnUniqueIDChanged();
            }
        }
        private global::System.Int32 _UniqueID;
        partial void OnUniqueIDChanging(global::System.Int32 value);
        partial void OnUniqueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentItem_LicenseType", "LicenseType")]
        public LicenseType LicenseType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LicenseType>("ChronozoomModel.FK_ContentItem_LicenseType", "LicenseType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LicenseType>("ChronozoomModel.FK_ContentItem_LicenseType", "LicenseType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LicenseType> LicenseTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LicenseType>("ChronozoomModel.FK_ContentItem_LicenseType", "LicenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LicenseType>("ChronozoomModel.FK_ContentItem_LicenseType", "LicenseType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentItem_MediaType", "MediaType")]
        public MediaType MediaType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaType>("ChronozoomModel.FK_ContentItem_MediaType", "MediaType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaType>("ChronozoomModel.FK_ContentItem_MediaType", "MediaType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MediaType> MediaTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaType>("ChronozoomModel.FK_ContentItem_MediaType", "MediaType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MediaType>("ChronozoomModel.FK_ContentItem_MediaType", "MediaType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentItem_Regime", "Regime")]
        public Regime Regime
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regime>("ChronozoomModel.FK_ContentItem_Regime", "Regime").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regime>("ChronozoomModel.FK_ContentItem_Regime", "Regime").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Regime> RegimeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regime>("ChronozoomModel.FK_ContentItem_Regime", "Regime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Regime>("ChronozoomModel.FK_ContentItem_Regime", "Regime", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentItem_Threshold", "Threshold")]
        public Threshold Threshold
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Threshold>("ChronozoomModel.FK_ContentItem_Threshold", "Threshold").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Threshold>("ChronozoomModel.FK_ContentItem_Threshold", "Threshold").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Threshold> ThresholdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Threshold>("ChronozoomModel.FK_ContentItem_Threshold", "Threshold");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Threshold>("ChronozoomModel.FK_ContentItem_Threshold", "Threshold", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentItem_TimeUnit", "TimeUnit")]
        public TimeUnit TimeUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_ContentItem_TimeUnit", "TimeUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_ContentItem_TimeUnit", "TimeUnit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TimeUnit> TimeUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_ContentItem_TimeUnit", "TimeUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TimeUnit>("ChronozoomModel.FK_ContentItem_TimeUnit", "TimeUnit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentItem_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ContentItem_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ContentItem_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ContentItem_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_ContentItem_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentItem_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ContentItem_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ContentItem_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ContentItem_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_ContentItem_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentKeyword_ContentItem", "ContentKeyword")]
        public EntityCollection<ContentKeyword> ContentKeywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentKeyword>("ChronozoomModel.FK_ContentKeyword_ContentItem", "ContentKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentKeyword>("ChronozoomModel.FK_ContentKeyword_ContentItem", "ContentKeyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitContentItem_ContentItem", "ExhibitContentItem")]
        public EntityCollection<ExhibitContentItem> ExhibitContentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExhibitContentItem>("ChronozoomModel.FK_ExhibitContentItem_ContentItem", "ExhibitContentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExhibitContentItem>("ChronozoomModel.FK_ExhibitContentItem_ContentItem", "ExhibitContentItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="ContentKeyword")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentKeyword : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentKeyword object.
        /// </summary>
        /// <param name="contentKeywordID">Initial value of the ContentKeywordID property.</param>
        /// <param name="contentID">Initial value of the ContentID property.</param>
        /// <param name="keywordID">Initial value of the KeywordID property.</param>
        public static ContentKeyword CreateContentKeyword(global::System.Guid contentKeywordID, global::System.Guid contentID, global::System.Guid keywordID)
        {
            ContentKeyword contentKeyword = new ContentKeyword();
            contentKeyword.ContentKeywordID = contentKeywordID;
            contentKeyword.ContentID = contentID;
            contentKeyword.KeywordID = keywordID;
            return contentKeyword;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContentKeywordID
        {
            get
            {
                return _ContentKeywordID;
            }
            set
            {
                if (_ContentKeywordID != value)
                {
                    OnContentKeywordIDChanging(value);
                    ReportPropertyChanging("ContentKeywordID");
                    _ContentKeywordID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContentKeywordID");
                    OnContentKeywordIDChanged();
                }
            }
        }
        private global::System.Guid _ContentKeywordID;
        partial void OnContentKeywordIDChanging(global::System.Guid value);
        partial void OnContentKeywordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContentID
        {
            get
            {
                return _ContentID;
            }
            set
            {
                OnContentIDChanging(value);
                ReportPropertyChanging("ContentID");
                _ContentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentID");
                OnContentIDChanged();
            }
        }
        private global::System.Guid _ContentID;
        partial void OnContentIDChanging(global::System.Guid value);
        partial void OnContentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid KeywordID
        {
            get
            {
                return _KeywordID;
            }
            set
            {
                OnKeywordIDChanging(value);
                ReportPropertyChanging("KeywordID");
                _KeywordID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeywordID");
                OnKeywordIDChanged();
            }
        }
        private global::System.Guid _KeywordID;
        partial void OnKeywordIDChanging(global::System.Guid value);
        partial void OnKeywordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentKeyword_ContentItem", "ContentItem")]
        public ContentItem ContentItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItem>("ChronozoomModel.FK_ContentKeyword_ContentItem", "ContentItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItem>("ChronozoomModel.FK_ContentKeyword_ContentItem", "ContentItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContentItem> ContentItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItem>("ChronozoomModel.FK_ContentKeyword_ContentItem", "ContentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContentItem>("ChronozoomModel.FK_ContentKeyword_ContentItem", "ContentItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentKeyword_Keyword", "Keyword")]
        public Keyword Keyword
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Keyword>("ChronozoomModel.FK_ContentKeyword_Keyword", "Keyword").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Keyword>("ChronozoomModel.FK_ContentKeyword_Keyword", "Keyword").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Keyword> KeywordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Keyword>("ChronozoomModel.FK_ContentKeyword_Keyword", "Keyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Keyword>("ChronozoomModel.FK_ContentKeyword_Keyword", "Keyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentKeyword_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ContentKeyword_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ContentKeyword_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ContentKeyword_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_ContentKeyword_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentKeyword_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ContentKeyword_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ContentKeyword_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ContentKeyword_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_ContentKeyword_User1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="CZSystemVersion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CZSystemVersion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CZSystemVersion object.
        /// </summary>
        /// <param name="cZSystemVersionID">Initial value of the CZSystemVersionID property.</param>
        public static CZSystemVersion CreateCZSystemVersion(global::System.Guid cZSystemVersionID)
        {
            CZSystemVersion cZSystemVersion = new CZSystemVersion();
            cZSystemVersion.CZSystemVersionID = cZSystemVersionID;
            return cZSystemVersion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StagingVersion
        {
            get
            {
                return _StagingVersion;
            }
            set
            {
                OnStagingVersionChanging(value);
                ReportPropertyChanging("StagingVersion");
                _StagingVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StagingVersion");
                OnStagingVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _StagingVersion;
        partial void OnStagingVersionChanging(Nullable<global::System.Int32> value);
        partial void OnStagingVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProdVersion
        {
            get
            {
                return _ProdVersion;
            }
            set
            {
                OnProdVersionChanging(value);
                ReportPropertyChanging("ProdVersion");
                _ProdVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProdVersion");
                OnProdVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _ProdVersion;
        partial void OnProdVersionChanging(Nullable<global::System.Int32> value);
        partial void OnProdVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CZSystemVersionID
        {
            get
            {
                return _CZSystemVersionID;
            }
            set
            {
                if (_CZSystemVersionID != value)
                {
                    OnCZSystemVersionIDChanging(value);
                    ReportPropertyChanging("CZSystemVersionID");
                    _CZSystemVersionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CZSystemVersionID");
                    OnCZSystemVersionIDChanged();
                }
            }
        }
        private global::System.Guid _CZSystemVersionID;
        partial void OnCZSystemVersionIDChanging(global::System.Guid value);
        partial void OnCZSystemVersionIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="CZVersion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CZVersion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CZVersion object.
        /// </summary>
        /// <param name="versionNumber">Initial value of the VersionNumber property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="cZVersionID">Initial value of the CZVersionID property.</param>
        public static CZVersion CreateCZVersion(global::System.Int32 versionNumber, global::System.DateTime createdDate, global::System.Boolean isDeleted, global::System.Guid cZVersionID)
        {
            CZVersion cZVersion = new CZVersion();
            cZVersion.VersionNumber = versionNumber;
            cZVersion.CreatedDate = createdDate;
            cZVersion.IsDeleted = isDeleted;
            cZVersion.CZVersionID = cZVersionID;
            return cZVersion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionNumber
        {
            get
            {
                return _VersionNumber;
            }
            set
            {
                OnVersionNumberChanging(value);
                ReportPropertyChanging("VersionNumber");
                _VersionNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionNumber");
                OnVersionNumberChanged();
            }
        }
        private global::System.Int32 _VersionNumber;
        partial void OnVersionNumberChanging(global::System.Int32 value);
        partial void OnVersionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PublishDate
        {
            get
            {
                return _PublishDate;
            }
            set
            {
                OnPublishDateChanging(value);
                ReportPropertyChanging("PublishDate");
                _PublishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishDate");
                OnPublishDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PublishDate;
        partial void OnPublishDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPublishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CZVersionID
        {
            get
            {
                return _CZVersionID;
            }
            set
            {
                if (_CZVersionID != value)
                {
                    OnCZVersionIDChanging(value);
                    ReportPropertyChanging("CZVersionID");
                    _CZVersionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CZVersionID");
                    OnCZVersionIDChanged();
                }
            }
        }
        private global::System.Guid _CZVersionID;
        partial void OnCZVersionIDChanging(global::System.Guid value);
        partial void OnCZVersionIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="Exhibit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Exhibit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Exhibit object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="thresholdID">Initial value of the ThresholdID property.</param>
        /// <param name="regimeID">Initial value of the RegimeID property.</param>
        /// <param name="uniqueID">Initial value of the UniqueID property.</param>
        public static Exhibit CreateExhibit(global::System.Guid id, global::System.String title, global::System.Guid thresholdID, global::System.Guid regimeID, global::System.Int32 uniqueID)
        {
            Exhibit exhibit = new Exhibit();
            exhibit.ID = id;
            exhibit.Title = title;
            exhibit.ThresholdID = thresholdID;
            exhibit.RegimeID = regimeID;
            exhibit.UniqueID = uniqueID;
            return exhibit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ThresholdID
        {
            get
            {
                return _ThresholdID;
            }
            set
            {
                OnThresholdIDChanging(value);
                ReportPropertyChanging("ThresholdID");
                _ThresholdID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThresholdID");
                OnThresholdIDChanged();
            }
        }
        private global::System.Guid _ThresholdID;
        partial void OnThresholdIDChanging(global::System.Guid value);
        partial void OnThresholdIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RegimeID
        {
            get
            {
                return _RegimeID;
            }
            set
            {
                OnRegimeIDChanging(value);
                ReportPropertyChanging("RegimeID");
                _RegimeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegimeID");
                OnRegimeIDChanged();
            }
        }
        private global::System.Guid _RegimeID;
        partial void OnRegimeIDChanging(global::System.Guid value);
        partial void OnRegimeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> ContentDate
        {
            get
            {
                return _ContentDate;
            }
            set
            {
                OnContentDateChanging(value);
                ReportPropertyChanging("ContentDate");
                _ContentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentDate");
                OnContentDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _ContentDate;
        partial void OnContentDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnContentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ContentYear
        {
            get
            {
                return _ContentYear;
            }
            set
            {
                OnContentYearChanging(value);
                ReportPropertyChanging("ContentYear");
                _ContentYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentYear");
                OnContentYearChanged();
            }
        }
        private Nullable<global::System.Decimal> _ContentYear;
        partial void OnContentYearChanging(Nullable<global::System.Decimal> value);
        partial void OnContentYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVisible
        {
            get
            {
                return _IsVisible;
            }
            set
            {
                OnIsVisibleChanging(value);
                ReportPropertyChanging("IsVisible");
                _IsVisible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVisible");
                OnIsVisibleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsVisible;
        partial void OnIsVisibleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TimeUnitID
        {
            get
            {
                return _TimeUnitID;
            }
            set
            {
                OnTimeUnitIDChanging(value);
                ReportPropertyChanging("TimeUnitID");
                _TimeUnitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeUnitID");
                OnTimeUnitIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TimeUnitID;
        partial void OnTimeUnitIDChanging(Nullable<global::System.Guid> value);
        partial void OnTimeUnitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UniqueID
        {
            get
            {
                return _UniqueID;
            }
            set
            {
                OnUniqueIDChanging(value);
                ReportPropertyChanging("UniqueID");
                _UniqueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueID");
                OnUniqueIDChanged();
            }
        }
        private global::System.Int32 _UniqueID;
        partial void OnUniqueIDChanging(global::System.Int32 value);
        partial void OnUniqueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private Nullable<global::System.Int32> _Sequence;
        partial void OnSequenceChanging(Nullable<global::System.Int32> value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Exhibit_Regime", "Regime")]
        public Regime Regime
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regime>("ChronozoomModel.FK_Exhibit_Regime", "Regime").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regime>("ChronozoomModel.FK_Exhibit_Regime", "Regime").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Regime> RegimeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regime>("ChronozoomModel.FK_Exhibit_Regime", "Regime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Regime>("ChronozoomModel.FK_Exhibit_Regime", "Regime", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Exhibit_Threshold", "Threshold")]
        public Threshold Threshold
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Threshold>("ChronozoomModel.FK_Exhibit_Threshold", "Threshold").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Threshold>("ChronozoomModel.FK_Exhibit_Threshold", "Threshold").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Threshold> ThresholdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Threshold>("ChronozoomModel.FK_Exhibit_Threshold", "Threshold");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Threshold>("ChronozoomModel.FK_Exhibit_Threshold", "Threshold", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Exhibit_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Exhibit_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Exhibit_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Exhibit_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Exhibit_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Exhibit_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Exhibit_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Exhibit_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Exhibit_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Exhibit_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitContentItem_Exhibit", "ExhibitContentItem")]
        public EntityCollection<ExhibitContentItem> ExhibitContentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExhibitContentItem>("ChronozoomModel.FK_ExhibitContentItem_Exhibit", "ExhibitContentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExhibitContentItem>("ChronozoomModel.FK_ExhibitContentItem_Exhibit", "ExhibitContentItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitKeyword_Exhibit", "ExhibitKeyword")]
        public EntityCollection<ExhibitKeyword> ExhibitKeywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExhibitKeyword>("ChronozoomModel.FK_ExhibitKeyword_Exhibit", "ExhibitKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExhibitKeyword>("ChronozoomModel.FK_ExhibitKeyword_Exhibit", "ExhibitKeyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TimelineExhibit_Exhibit", "TimelineExhibit")]
        public EntityCollection<TimelineExhibit> TimelineExhibits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineExhibit>("ChronozoomModel.FK_TimelineExhibit_Exhibit", "TimelineExhibit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineExhibit>("ChronozoomModel.FK_TimelineExhibit_Exhibit", "TimelineExhibit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Exhibit_TimeUnit", "TimeUnit")]
        public TimeUnit TimeUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_Exhibit_TimeUnit", "TimeUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_Exhibit_TimeUnit", "TimeUnit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TimeUnit> TimeUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_Exhibit_TimeUnit", "TimeUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TimeUnit>("ChronozoomModel.FK_Exhibit_TimeUnit", "TimeUnit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitReference_Exhibit", "ExhibitReference")]
        public EntityCollection<ExhibitReferenceEntity> ExhibitReferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExhibitReferenceEntity>("ChronozoomModel.FK_ExhibitReference_Exhibit", "ExhibitReference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExhibitReferenceEntity>("ChronozoomModel.FK_ExhibitReference_Exhibit", "ExhibitReference", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="ExhibitContentItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExhibitContentItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExhibitContentItem object.
        /// </summary>
        /// <param name="exhibitContentItemID">Initial value of the ExhibitContentItemID property.</param>
        /// <param name="exhibitID">Initial value of the ExhibitID property.</param>
        /// <param name="contentItemID">Initial value of the ContentItemID property.</param>
        public static ExhibitContentItem CreateExhibitContentItem(global::System.Guid exhibitContentItemID, global::System.Guid exhibitID, global::System.Guid contentItemID)
        {
            ExhibitContentItem exhibitContentItem = new ExhibitContentItem();
            exhibitContentItem.ExhibitContentItemID = exhibitContentItemID;
            exhibitContentItem.ExhibitID = exhibitID;
            exhibitContentItem.ContentItemID = contentItemID;
            return exhibitContentItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExhibitContentItemID
        {
            get
            {
                return _ExhibitContentItemID;
            }
            set
            {
                if (_ExhibitContentItemID != value)
                {
                    OnExhibitContentItemIDChanging(value);
                    ReportPropertyChanging("ExhibitContentItemID");
                    _ExhibitContentItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExhibitContentItemID");
                    OnExhibitContentItemIDChanged();
                }
            }
        }
        private global::System.Guid _ExhibitContentItemID;
        partial void OnExhibitContentItemIDChanging(global::System.Guid value);
        partial void OnExhibitContentItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExhibitID
        {
            get
            {
                return _ExhibitID;
            }
            set
            {
                OnExhibitIDChanging(value);
                ReportPropertyChanging("ExhibitID");
                _ExhibitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExhibitID");
                OnExhibitIDChanged();
            }
        }
        private global::System.Guid _ExhibitID;
        partial void OnExhibitIDChanging(global::System.Guid value);
        partial void OnExhibitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContentItemID
        {
            get
            {
                return _ContentItemID;
            }
            set
            {
                OnContentItemIDChanging(value);
                ReportPropertyChanging("ContentItemID");
                _ContentItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentItemID");
                OnContentItemIDChanged();
            }
        }
        private global::System.Guid _ContentItemID;
        partial void OnContentItemIDChanging(global::System.Guid value);
        partial void OnContentItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private Nullable<global::System.Int16> _Order;
        partial void OnOrderChanging(Nullable<global::System.Int16> value);
        partial void OnOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitContentItem_ContentItem", "ContentItem")]
        public ContentItem ContentItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItem>("ChronozoomModel.FK_ExhibitContentItem_ContentItem", "ContentItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItem>("ChronozoomModel.FK_ExhibitContentItem_ContentItem", "ContentItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContentItem> ContentItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItem>("ChronozoomModel.FK_ExhibitContentItem_ContentItem", "ContentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContentItem>("ChronozoomModel.FK_ExhibitContentItem_ContentItem", "ContentItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitContentItem_Exhibit", "Exhibit")]
        public Exhibit Exhibit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exhibit>("ChronozoomModel.FK_ExhibitContentItem_Exhibit", "Exhibit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exhibit>("ChronozoomModel.FK_ExhibitContentItem_Exhibit", "Exhibit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Exhibit> ExhibitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exhibit>("ChronozoomModel.FK_ExhibitContentItem_Exhibit", "Exhibit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Exhibit>("ChronozoomModel.FK_ExhibitContentItem_Exhibit", "Exhibit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitContentItem_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitContentItem_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitContentItem_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitContentItem_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_ExhibitContentItem_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitContentItem_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitContentItem_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitContentItem_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitContentItem_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_ExhibitContentItem_User1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="ExhibitKeyword")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExhibitKeyword : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExhibitKeyword object.
        /// </summary>
        /// <param name="exhibitKeywordID">Initial value of the ExhibitKeywordID property.</param>
        /// <param name="exhibitID">Initial value of the ExhibitID property.</param>
        /// <param name="keywordID">Initial value of the KeywordID property.</param>
        public static ExhibitKeyword CreateExhibitKeyword(global::System.Guid exhibitKeywordID, global::System.Guid exhibitID, global::System.Guid keywordID)
        {
            ExhibitKeyword exhibitKeyword = new ExhibitKeyword();
            exhibitKeyword.ExhibitKeywordID = exhibitKeywordID;
            exhibitKeyword.ExhibitID = exhibitID;
            exhibitKeyword.KeywordID = keywordID;
            return exhibitKeyword;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExhibitKeywordID
        {
            get
            {
                return _ExhibitKeywordID;
            }
            set
            {
                if (_ExhibitKeywordID != value)
                {
                    OnExhibitKeywordIDChanging(value);
                    ReportPropertyChanging("ExhibitKeywordID");
                    _ExhibitKeywordID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExhibitKeywordID");
                    OnExhibitKeywordIDChanged();
                }
            }
        }
        private global::System.Guid _ExhibitKeywordID;
        partial void OnExhibitKeywordIDChanging(global::System.Guid value);
        partial void OnExhibitKeywordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExhibitID
        {
            get
            {
                return _ExhibitID;
            }
            set
            {
                OnExhibitIDChanging(value);
                ReportPropertyChanging("ExhibitID");
                _ExhibitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExhibitID");
                OnExhibitIDChanged();
            }
        }
        private global::System.Guid _ExhibitID;
        partial void OnExhibitIDChanging(global::System.Guid value);
        partial void OnExhibitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid KeywordID
        {
            get
            {
                return _KeywordID;
            }
            set
            {
                OnKeywordIDChanging(value);
                ReportPropertyChanging("KeywordID");
                _KeywordID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeywordID");
                OnKeywordIDChanged();
            }
        }
        private global::System.Guid _KeywordID;
        partial void OnKeywordIDChanging(global::System.Guid value);
        partial void OnKeywordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitKeyword_Exhibit", "Exhibit")]
        public Exhibit Exhibit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exhibit>("ChronozoomModel.FK_ExhibitKeyword_Exhibit", "Exhibit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exhibit>("ChronozoomModel.FK_ExhibitKeyword_Exhibit", "Exhibit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Exhibit> ExhibitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exhibit>("ChronozoomModel.FK_ExhibitKeyword_Exhibit", "Exhibit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Exhibit>("ChronozoomModel.FK_ExhibitKeyword_Exhibit", "Exhibit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitKeyword_Keyword", "Keyword")]
        public Keyword Keyword
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Keyword>("ChronozoomModel.FK_ExhibitKeyword_Keyword", "Keyword").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Keyword>("ChronozoomModel.FK_ExhibitKeyword_Keyword", "Keyword").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Keyword> KeywordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Keyword>("ChronozoomModel.FK_ExhibitKeyword_Keyword", "Keyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Keyword>("ChronozoomModel.FK_ExhibitKeyword_Keyword", "Keyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitKeyword_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitKeyword_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitKeyword_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitKeyword_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_ExhibitKeyword_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitKeyword_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitKeyword_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitKeyword_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitKeyword_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_ExhibitKeyword_User1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="ExhibitReferenceEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExhibitReferenceEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExhibitReferenceEntity object.
        /// </summary>
        /// <param name="exhibitReferenceID">Initial value of the ExhibitReferenceID property.</param>
        /// <param name="exhibitID">Initial value of the ExhibitID property.</param>
        /// <param name="referenceID">Initial value of the ReferenceID property.</param>
        public static ExhibitReferenceEntity CreateExhibitReferenceEntity(global::System.Guid exhibitReferenceID, global::System.Guid exhibitID, global::System.Guid referenceID)
        {
            ExhibitReferenceEntity exhibitReferenceEntity = new ExhibitReferenceEntity();
            exhibitReferenceEntity.ExhibitReferenceID = exhibitReferenceID;
            exhibitReferenceEntity.ExhibitID = exhibitID;
            exhibitReferenceEntity.ReferenceID = referenceID;
            return exhibitReferenceEntity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExhibitReferenceID
        {
            get
            {
                return _ExhibitReferenceID;
            }
            set
            {
                if (_ExhibitReferenceID != value)
                {
                    OnExhibitReferenceIDChanging(value);
                    ReportPropertyChanging("ExhibitReferenceID");
                    _ExhibitReferenceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExhibitReferenceID");
                    OnExhibitReferenceIDChanged();
                }
            }
        }
        private global::System.Guid _ExhibitReferenceID;
        partial void OnExhibitReferenceIDChanging(global::System.Guid value);
        partial void OnExhibitReferenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExhibitID
        {
            get
            {
                return _ExhibitID;
            }
            set
            {
                OnExhibitIDChanging(value);
                ReportPropertyChanging("ExhibitID");
                _ExhibitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExhibitID");
                OnExhibitIDChanged();
            }
        }
        private global::System.Guid _ExhibitID;
        partial void OnExhibitIDChanging(global::System.Guid value);
        partial void OnExhibitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReferenceID
        {
            get
            {
                return _ReferenceID;
            }
            set
            {
                OnReferenceIDChanging(value);
                ReportPropertyChanging("ReferenceID");
                _ReferenceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceID");
                OnReferenceIDChanged();
            }
        }
        private global::System.Guid _ReferenceID;
        partial void OnReferenceIDChanging(global::System.Guid value);
        partial void OnReferenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private Nullable<global::System.Int16> _Order;
        partial void OnOrderChanging(Nullable<global::System.Int16> value);
        partial void OnOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitReference_Exhibit", "Exhibit")]
        public Exhibit Exhibit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exhibit>("ChronozoomModel.FK_ExhibitReference_Exhibit", "Exhibit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exhibit>("ChronozoomModel.FK_ExhibitReference_Exhibit", "Exhibit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Exhibit> ExhibitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exhibit>("ChronozoomModel.FK_ExhibitReference_Exhibit", "Exhibit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Exhibit>("ChronozoomModel.FK_ExhibitReference_Exhibit", "Exhibit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitReference_Reference", "Reference")]
        public Reference Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reference>("ChronozoomModel.FK_ExhibitReference_Reference", "Reference").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reference>("ChronozoomModel.FK_ExhibitReference_Reference", "Reference").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reference> ReferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reference>("ChronozoomModel.FK_ExhibitReference_Reference", "Reference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reference>("ChronozoomModel.FK_ExhibitReference_Reference", "Reference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitReference_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitReference_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitReference_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitReference_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_ExhibitReference_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitReference_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitReference_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitReference_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ExhibitReference_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_ExhibitReference_User1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="Keyword")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Keyword : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Keyword object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="keyword1">Initial value of the Keyword1 property.</param>
        public static Keyword CreateKeyword(global::System.Guid id, global::System.String keyword1)
        {
            Keyword keyword = new Keyword();
            keyword.ID = id;
            keyword.Keyword1 = keyword1;
            return keyword;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Keyword1
        {
            get
            {
                return _Keyword1;
            }
            set
            {
                OnKeyword1Changing(value);
                ReportPropertyChanging("Keyword1");
                _Keyword1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Keyword1");
                OnKeyword1Changed();
            }
        }
        private global::System.String _Keyword1;
        partial void OnKeyword1Changing(global::System.String value);
        partial void OnKeyword1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DoNotDisplay
        {
            get
            {
                return _DoNotDisplay;
            }
            set
            {
                OnDoNotDisplayChanging(value);
                ReportPropertyChanging("DoNotDisplay");
                _DoNotDisplay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoNotDisplay");
                OnDoNotDisplayChanged();
            }
        }
        private Nullable<global::System.Boolean> _DoNotDisplay;
        partial void OnDoNotDisplayChanging(Nullable<global::System.Boolean> value);
        partial void OnDoNotDisplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentKeyword_Keyword", "ContentKeyword")]
        public EntityCollection<ContentKeyword> ContentKeywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentKeyword>("ChronozoomModel.FK_ContentKeyword_Keyword", "ContentKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentKeyword>("ChronozoomModel.FK_ContentKeyword_Keyword", "ContentKeyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Keyword_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Keyword_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Keyword_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Keyword_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Keyword_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Keyword_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Keyword_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Keyword_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Keyword_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Keyword_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitKeyword_Keyword", "ExhibitKeyword")]
        public EntityCollection<ExhibitKeyword> ExhibitKeywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExhibitKeyword>("ChronozoomModel.FK_ExhibitKeyword_Keyword", "ExhibitKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExhibitKeyword>("ChronozoomModel.FK_ExhibitKeyword_Keyword", "ExhibitKeyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ReferenceKeyword_Keyword", "ReferenceKeyword")]
        public EntityCollection<ReferenceKeyword> ReferenceKeywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReferenceKeyword>("ChronozoomModel.FK_ReferenceKeyword_Keyword", "ReferenceKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReferenceKeyword>("ChronozoomModel.FK_ReferenceKeyword_Keyword", "ReferenceKeyword", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="LicenseType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LicenseType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LicenseType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="licenseType1">Initial value of the LicenseType1 property.</param>
        /// <param name="licenseURL">Initial value of the LicenseURL property.</param>
        public static LicenseType CreateLicenseType(global::System.Guid id, global::System.String licenseType1, global::System.String licenseURL)
        {
            LicenseType licenseType = new LicenseType();
            licenseType.ID = id;
            licenseType.LicenseType1 = licenseType1;
            licenseType.LicenseURL = licenseURL;
            return licenseType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseType1
        {
            get
            {
                return _LicenseType1;
            }
            set
            {
                OnLicenseType1Changing(value);
                ReportPropertyChanging("LicenseType1");
                _LicenseType1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LicenseType1");
                OnLicenseType1Changed();
            }
        }
        private global::System.String _LicenseType1;
        partial void OnLicenseType1Changing(global::System.String value);
        partial void OnLicenseType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseURL
        {
            get
            {
                return _LicenseURL;
            }
            set
            {
                OnLicenseURLChanging(value);
                ReportPropertyChanging("LicenseURL");
                _LicenseURL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LicenseURL");
                OnLicenseURLChanged();
            }
        }
        private global::System.String _LicenseURL;
        partial void OnLicenseURLChanging(global::System.String value);
        partial void OnLicenseURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentItem_LicenseType", "ContentItem")]
        public EntityCollection<ContentItem> ContentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentItem>("ChronozoomModel.FK_ContentItem_LicenseType", "ContentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentItem>("ChronozoomModel.FK_ContentItem_LicenseType", "ContentItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_LicenseType_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_LicenseType_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_LicenseType_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_LicenseType_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_LicenseType_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_LicenseType_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_LicenseType_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_LicenseType_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_LicenseType_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_LicenseType_User1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="MediaType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MediaType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MediaType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="mediaType1">Initial value of the MediaType1 property.</param>
        public static MediaType CreateMediaType(global::System.Guid id, global::System.String mediaType1)
        {
            MediaType mediaType = new MediaType();
            mediaType.ID = id;
            mediaType.MediaType1 = mediaType1;
            return mediaType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MediaType1
        {
            get
            {
                return _MediaType1;
            }
            set
            {
                OnMediaType1Changing(value);
                ReportPropertyChanging("MediaType1");
                _MediaType1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MediaType1");
                OnMediaType1Changed();
            }
        }
        private global::System.String _MediaType1;
        partial void OnMediaType1Changing(global::System.String value);
        partial void OnMediaType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentItem_MediaType", "ContentItem")]
        public EntityCollection<ContentItem> ContentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentItem>("ChronozoomModel.FK_ContentItem_MediaType", "ContentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentItem>("ChronozoomModel.FK_ContentItem_MediaType", "ContentItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_MediaType_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_MediaType_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_MediaType_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_MediaType_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_MediaType_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_MediaType_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_MediaType_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_MediaType_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_MediaType_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_MediaType_User1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="permission1">Initial value of the Permission1 property.</param>
        public static Permission CreatePermission(global::System.Guid id, global::System.String permission1)
        {
            Permission permission = new Permission();
            permission.ID = id;
            permission.Permission1 = permission1;
            return permission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Permission1
        {
            get
            {
                return _Permission1;
            }
            set
            {
                OnPermission1Changing(value);
                ReportPropertyChanging("Permission1");
                _Permission1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Permission1");
                OnPermission1Changed();
            }
        }
        private global::System.String _Permission1;
        partial void OnPermission1Changing(global::System.String value);
        partial void OnPermission1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IntRepresentation
        {
            get
            {
                return _IntRepresentation;
            }
            set
            {
                OnIntRepresentationChanging(value);
                ReportPropertyChanging("IntRepresentation");
                _IntRepresentation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntRepresentation");
                OnIntRepresentationChanged();
            }
        }
        private Nullable<global::System.Byte> _IntRepresentation;
        partial void OnIntRepresentationChanging(Nullable<global::System.Byte> value);
        partial void OnIntRepresentationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Permission_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Permission_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Permission_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Permission_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Permission_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Permission_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Permission_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Permission_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Permission_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Permission_User1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="Reference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reference object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="authors">Initial value of the Authors property.</param>
        /// <param name="bookChapters">Initial value of the BookChapters property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="citationTypeID">Initial value of the CitationTypeID property.</param>
        /// <param name="pageNumbers">Initial value of the PageNumbers property.</param>
        /// <param name="publication">Initial value of the Publication property.</param>
        /// <param name="publicationDates">Initial value of the PublicationDates property.</param>
        /// <param name="source">Initial value of the Source property.</param>
        public static Reference CreateReference(global::System.Guid id, global::System.String authors, global::System.String bookChapters, global::System.String title, global::System.Guid citationTypeID, global::System.String pageNumbers, global::System.String publication, global::System.String publicationDates, global::System.String source)
        {
            Reference reference = new Reference();
            reference.ID = id;
            reference.Authors = authors;
            reference.BookChapters = bookChapters;
            reference.Title = title;
            reference.CitationTypeID = citationTypeID;
            reference.PageNumbers = pageNumbers;
            reference.Publication = publication;
            reference.PublicationDates = publicationDates;
            reference.Source = source;
            return reference;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Authors
        {
            get
            {
                return _Authors;
            }
            set
            {
                OnAuthorsChanging(value);
                ReportPropertyChanging("Authors");
                _Authors = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Authors");
                OnAuthorsChanged();
            }
        }
        private global::System.String _Authors;
        partial void OnAuthorsChanging(global::System.String value);
        partial void OnAuthorsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BookChapters
        {
            get
            {
                return _BookChapters;
            }
            set
            {
                OnBookChaptersChanging(value);
                ReportPropertyChanging("BookChapters");
                _BookChapters = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BookChapters");
                OnBookChaptersChanged();
            }
        }
        private global::System.String _BookChapters;
        partial void OnBookChaptersChanging(global::System.String value);
        partial void OnBookChaptersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CitationTypeID
        {
            get
            {
                return _CitationTypeID;
            }
            set
            {
                OnCitationTypeIDChanging(value);
                ReportPropertyChanging("CitationTypeID");
                _CitationTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CitationTypeID");
                OnCitationTypeIDChanged();
            }
        }
        private global::System.Guid _CitationTypeID;
        partial void OnCitationTypeIDChanging(global::System.Guid value);
        partial void OnCitationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PageNumbers
        {
            get
            {
                return _PageNumbers;
            }
            set
            {
                OnPageNumbersChanging(value);
                ReportPropertyChanging("PageNumbers");
                _PageNumbers = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageNumbers");
                OnPageNumbersChanged();
            }
        }
        private global::System.String _PageNumbers;
        partial void OnPageNumbersChanging(global::System.String value);
        partial void OnPageNumbersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Publication
        {
            get
            {
                return _Publication;
            }
            set
            {
                OnPublicationChanging(value);
                ReportPropertyChanging("Publication");
                _Publication = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Publication");
                OnPublicationChanged();
            }
        }
        private global::System.String _Publication;
        partial void OnPublicationChanging(global::System.String value);
        partial void OnPublicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PublicationDates
        {
            get
            {
                return _PublicationDates;
            }
            set
            {
                OnPublicationDatesChanging(value);
                ReportPropertyChanging("PublicationDates");
                _PublicationDates = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PublicationDates");
                OnPublicationDatesChanged();
            }
        }
        private global::System.String _PublicationDates;
        partial void OnPublicationDatesChanging(global::System.String value);
        partial void OnPublicationDatesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVisible
        {
            get
            {
                return _IsVisible;
            }
            set
            {
                OnIsVisibleChanging(value);
                ReportPropertyChanging("IsVisible");
                _IsVisible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVisible");
                OnIsVisibleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsVisible;
        partial void OnIsVisibleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Reference_CitationType", "CitationType")]
        public CitationType CitationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CitationType>("ChronozoomModel.FK_Reference_CitationType", "CitationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CitationType>("ChronozoomModel.FK_Reference_CitationType", "CitationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CitationType> CitationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CitationType>("ChronozoomModel.FK_Reference_CitationType", "CitationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CitationType>("ChronozoomModel.FK_Reference_CitationType", "CitationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Reference_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Reference_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Reference_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Reference_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Reference_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Reference_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Reference_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Reference_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Reference_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Reference_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ReferenceKeyword_Reference", "ReferenceKeyword")]
        public EntityCollection<ReferenceKeyword> ReferenceKeywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReferenceKeyword>("ChronozoomModel.FK_ReferenceKeyword_Reference", "ReferenceKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReferenceKeyword>("ChronozoomModel.FK_ReferenceKeyword_Reference", "ReferenceKeyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitReference_Reference", "ExhibitReference")]
        public EntityCollection<ExhibitReferenceEntity> ExhibitReferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExhibitReferenceEntity>("ChronozoomModel.FK_ExhibitReference_Reference", "ExhibitReference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExhibitReferenceEntity>("ChronozoomModel.FK_ExhibitReference_Reference", "ExhibitReference", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="ReferenceKeyword")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReferenceKeyword : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReferenceKeyword object.
        /// </summary>
        /// <param name="referenceKeywordID">Initial value of the ReferenceKeywordID property.</param>
        /// <param name="referenceID">Initial value of the ReferenceID property.</param>
        /// <param name="keywordID">Initial value of the KeywordID property.</param>
        public static ReferenceKeyword CreateReferenceKeyword(global::System.Guid referenceKeywordID, global::System.Guid referenceID, global::System.Guid keywordID)
        {
            ReferenceKeyword referenceKeyword = new ReferenceKeyword();
            referenceKeyword.ReferenceKeywordID = referenceKeywordID;
            referenceKeyword.ReferenceID = referenceID;
            referenceKeyword.KeywordID = keywordID;
            return referenceKeyword;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReferenceKeywordID
        {
            get
            {
                return _ReferenceKeywordID;
            }
            set
            {
                if (_ReferenceKeywordID != value)
                {
                    OnReferenceKeywordIDChanging(value);
                    ReportPropertyChanging("ReferenceKeywordID");
                    _ReferenceKeywordID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReferenceKeywordID");
                    OnReferenceKeywordIDChanged();
                }
            }
        }
        private global::System.Guid _ReferenceKeywordID;
        partial void OnReferenceKeywordIDChanging(global::System.Guid value);
        partial void OnReferenceKeywordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReferenceID
        {
            get
            {
                return _ReferenceID;
            }
            set
            {
                OnReferenceIDChanging(value);
                ReportPropertyChanging("ReferenceID");
                _ReferenceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceID");
                OnReferenceIDChanged();
            }
        }
        private global::System.Guid _ReferenceID;
        partial void OnReferenceIDChanging(global::System.Guid value);
        partial void OnReferenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid KeywordID
        {
            get
            {
                return _KeywordID;
            }
            set
            {
                OnKeywordIDChanging(value);
                ReportPropertyChanging("KeywordID");
                _KeywordID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeywordID");
                OnKeywordIDChanged();
            }
        }
        private global::System.Guid _KeywordID;
        partial void OnKeywordIDChanging(global::System.Guid value);
        partial void OnKeywordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ReferenceKeyword_Keyword", "Keyword")]
        public Keyword Keyword
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Keyword>("ChronozoomModel.FK_ReferenceKeyword_Keyword", "Keyword").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Keyword>("ChronozoomModel.FK_ReferenceKeyword_Keyword", "Keyword").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Keyword> KeywordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Keyword>("ChronozoomModel.FK_ReferenceKeyword_Keyword", "Keyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Keyword>("ChronozoomModel.FK_ReferenceKeyword_Keyword", "Keyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ReferenceKeyword_Reference", "Reference")]
        public Reference Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reference>("ChronozoomModel.FK_ReferenceKeyword_Reference", "Reference").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reference>("ChronozoomModel.FK_ReferenceKeyword_Reference", "Reference").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reference> ReferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reference>("ChronozoomModel.FK_ReferenceKeyword_Reference", "Reference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reference>("ChronozoomModel.FK_ReferenceKeyword_Reference", "Reference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ReferenceKeyword_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ReferenceKeyword_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ReferenceKeyword_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ReferenceKeyword_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_ReferenceKeyword_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ReferenceKeyword_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ReferenceKeyword_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ReferenceKeyword_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_ReferenceKeyword_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_ReferenceKeyword_User1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="Regime")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Regime : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Regime object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="regime1">Initial value of the Regime1 property.</param>
        public static Regime CreateRegime(global::System.Guid id, global::System.String regime1)
        {
            Regime regime = new Regime();
            regime.ID = id;
            regime.Regime1 = regime1;
            return regime;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Regime1
        {
            get
            {
                return _Regime1;
            }
            set
            {
                OnRegime1Changing(value);
                ReportPropertyChanging("Regime1");
                _Regime1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Regime1");
                OnRegime1Changed();
            }
        }
        private global::System.String _Regime1;
        partial void OnRegime1Changing(global::System.String value);
        partial void OnRegime1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DoNotDisplay
        {
            get
            {
                return _DoNotDisplay;
            }
            set
            {
                OnDoNotDisplayChanging(value);
                ReportPropertyChanging("DoNotDisplay");
                _DoNotDisplay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoNotDisplay");
                OnDoNotDisplayChanged();
            }
        }
        private Nullable<global::System.Boolean> _DoNotDisplay;
        partial void OnDoNotDisplayChanging(Nullable<global::System.Boolean> value);
        partial void OnDoNotDisplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentItem_Regime", "ContentItem")]
        public EntityCollection<ContentItem> ContentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentItem>("ChronozoomModel.FK_ContentItem_Regime", "ContentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentItem>("ChronozoomModel.FK_ContentItem_Regime", "ContentItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Regime_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Regime_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Regime_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Regime_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Regime_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Regime_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Regime_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Regime_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Regime_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Regime_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Exhibit_Regime", "Exhibit")]
        public EntityCollection<Exhibit> Exhibits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Exhibit>("ChronozoomModel.FK_Exhibit_Regime", "Exhibit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Exhibit>("ChronozoomModel.FK_Exhibit_Regime", "Exhibit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Timeline_Regime", "Timeline")]
        public EntityCollection<Timeline> Timelines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Timeline>("ChronozoomModel.FK_Timeline_Regime", "Timeline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Timeline>("ChronozoomModel.FK_Timeline_Regime", "Timeline", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="role1">Initial value of the Role1 property.</param>
        public static Role CreateRole(global::System.Guid id, global::System.String role1)
        {
            Role role = new Role();
            role.ID = id;
            role.Role1 = role1;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role1
        {
            get
            {
                return _Role1;
            }
            set
            {
                OnRole1Changing(value);
                ReportPropertyChanging("Role1");
                _Role1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Role1");
                OnRole1Changed();
            }
        }
        private global::System.String _Role1;
        partial void OnRole1Changing(global::System.String value);
        partial void OnRole1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_AuthoringTableRolePermission_Role", "AuthoringTableRolePermission")]
        public EntityCollection<AuthoringTableRolePermission> AuthoringTableRolePermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthoringTableRolePermission>("ChronozoomModel.FK_AuthoringTableRolePermission_Role", "AuthoringTableRolePermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthoringTableRolePermission>("ChronozoomModel.FK_AuthoringTableRolePermission_Role", "AuthoringTableRolePermission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Role_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Role_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Role_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Role_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Role_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Role_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Role_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Role_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Role_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Role_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_User_Role", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("ChronozoomModel.FK_User_Role", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("ChronozoomModel.FK_User_Role", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="Threshold")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Threshold : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Threshold object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="threshold1">Initial value of the Threshold1 property.</param>
        public static Threshold CreateThreshold(global::System.Guid id, global::System.String threshold1)
        {
            Threshold threshold = new Threshold();
            threshold.ID = id;
            threshold.Threshold1 = threshold1;
            return threshold;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Threshold1
        {
            get
            {
                return _Threshold1;
            }
            set
            {
                OnThreshold1Changing(value);
                ReportPropertyChanging("Threshold1");
                _Threshold1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Threshold1");
                OnThreshold1Changed();
            }
        }
        private global::System.String _Threshold1;
        partial void OnThreshold1Changing(global::System.String value);
        partial void OnThreshold1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> ThresholdDate
        {
            get
            {
                return _ThresholdDate;
            }
            set
            {
                OnThresholdDateChanging(value);
                ReportPropertyChanging("ThresholdDate");
                _ThresholdDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThresholdDate");
                OnThresholdDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _ThresholdDate;
        partial void OnThresholdDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnThresholdDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ThresholdYear
        {
            get
            {
                return _ThresholdYear;
            }
            set
            {
                OnThresholdYearChanging(value);
                ReportPropertyChanging("ThresholdYear");
                _ThresholdYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThresholdYear");
                OnThresholdYearChanged();
            }
        }
        private Nullable<global::System.Decimal> _ThresholdYear;
        partial void OnThresholdYearChanging(Nullable<global::System.Decimal> value);
        partial void OnThresholdYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ThresholdTimeUnit
        {
            get
            {
                return _ThresholdTimeUnit;
            }
            set
            {
                OnThresholdTimeUnitChanging(value);
                ReportPropertyChanging("ThresholdTimeUnit");
                _ThresholdTimeUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThresholdTimeUnit");
                OnThresholdTimeUnitChanged();
            }
        }
        private Nullable<global::System.Guid> _ThresholdTimeUnit;
        partial void OnThresholdTimeUnitChanging(Nullable<global::System.Guid> value);
        partial void OnThresholdTimeUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortDescription
        {
            get
            {
                return _ShortDescription;
            }
            set
            {
                OnShortDescriptionChanging(value);
                ReportPropertyChanging("ShortDescription");
                _ShortDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortDescription");
                OnShortDescriptionChanged();
            }
        }
        private global::System.String _ShortDescription;
        partial void OnShortDescriptionChanging(global::System.String value);
        partial void OnShortDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> BookmarkID
        {
            get
            {
                return _BookmarkID;
            }
            set
            {
                OnBookmarkIDChanging(value);
                ReportPropertyChanging("BookmarkID");
                _BookmarkID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookmarkID");
                OnBookmarkIDChanged();
            }
        }
        private Nullable<global::System.Guid> _BookmarkID;
        partial void OnBookmarkIDChanging(Nullable<global::System.Guid> value);
        partial void OnBookmarkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentItem_Threshold", "ContentItem")]
        public EntityCollection<ContentItem> ContentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentItem>("ChronozoomModel.FK_ContentItem_Threshold", "ContentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentItem>("ChronozoomModel.FK_ContentItem_Threshold", "ContentItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Threshold_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Threshold_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Threshold_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Threshold_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Threshold_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Threshold_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Threshold_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Threshold_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Threshold_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Threshold_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Exhibit_Threshold", "Exhibit")]
        public EntityCollection<Exhibit> Exhibits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Exhibit>("ChronozoomModel.FK_Exhibit_Threshold", "Exhibit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Exhibit>("ChronozoomModel.FK_Exhibit_Threshold", "Exhibit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Timeline_Threshold", "Timeline")]
        public EntityCollection<Timeline> Timelines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Timeline>("ChronozoomModel.FK_Timeline_Threshold", "Timeline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Timeline>("ChronozoomModel.FK_Timeline_Threshold", "Timeline", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Threshold_FromTimeUnit", "TimeUnit")]
        public TimeUnit TimeUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_Threshold_FromTimeUnit", "TimeUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_Threshold_FromTimeUnit", "TimeUnit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TimeUnit> TimeUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_Threshold_FromTimeUnit", "TimeUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TimeUnit>("ChronozoomModel.FK_Threshold_FromTimeUnit", "TimeUnit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Threshold_Bookmark", "BookMark")]
        public BookMark BookMark
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BookMark>("ChronozoomModel.FK_Threshold_Bookmark", "BookMark").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BookMark>("ChronozoomModel.FK_Threshold_Bookmark", "BookMark").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BookMark> BookMarkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BookMark>("ChronozoomModel.FK_Threshold_Bookmark", "BookMark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BookMark>("ChronozoomModel.FK_Threshold_Bookmark", "BookMark", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="Timeline")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Timeline : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Timeline object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="thresholdID">Initial value of the ThresholdID property.</param>
        /// <param name="regimeID">Initial value of the RegimeID property.</param>
        /// <param name="fromContentYear">Initial value of the FromContentYear property.</param>
        /// <param name="toContentYear">Initial value of the ToContentYear property.</param>
        /// <param name="fromTimeUnit">Initial value of the FromTimeUnit property.</param>
        /// <param name="toTimeUnit">Initial value of the ToTimeUnit property.</param>
        /// <param name="uniqueID">Initial value of the UniqueID property.</param>
        public static Timeline CreateTimeline(global::System.Guid id, global::System.String title, global::System.Guid thresholdID, global::System.Guid regimeID, global::System.Decimal fromContentYear, global::System.Decimal toContentYear, global::System.Guid fromTimeUnit, global::System.Guid toTimeUnit, global::System.Int32 uniqueID)
        {
            Timeline timeline = new Timeline();
            timeline.ID = id;
            timeline.Title = title;
            timeline.ThresholdID = thresholdID;
            timeline.RegimeID = regimeID;
            timeline.FromContentYear = fromContentYear;
            timeline.ToContentYear = toContentYear;
            timeline.FromTimeUnit = fromTimeUnit;
            timeline.ToTimeUnit = toTimeUnit;
            timeline.UniqueID = uniqueID;
            return timeline;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ThresholdID
        {
            get
            {
                return _ThresholdID;
            }
            set
            {
                OnThresholdIDChanging(value);
                ReportPropertyChanging("ThresholdID");
                _ThresholdID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThresholdID");
                OnThresholdIDChanged();
            }
        }
        private global::System.Guid _ThresholdID;
        partial void OnThresholdIDChanging(global::System.Guid value);
        partial void OnThresholdIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RegimeID
        {
            get
            {
                return _RegimeID;
            }
            set
            {
                OnRegimeIDChanging(value);
                ReportPropertyChanging("RegimeID");
                _RegimeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegimeID");
                OnRegimeIDChanged();
            }
        }
        private global::System.Guid _RegimeID;
        partial void OnRegimeIDChanging(global::System.Guid value);
        partial void OnRegimeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> FromContentDate
        {
            get
            {
                return _FromContentDate;
            }
            set
            {
                OnFromContentDateChanging(value);
                ReportPropertyChanging("FromContentDate");
                _FromContentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromContentDate");
                OnFromContentDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _FromContentDate;
        partial void OnFromContentDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnFromContentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FromContentYear
        {
            get
            {
                return _FromContentYear;
            }
            set
            {
                OnFromContentYearChanging(value);
                ReportPropertyChanging("FromContentYear");
                _FromContentYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromContentYear");
                OnFromContentYearChanged();
            }
        }
        private global::System.Decimal _FromContentYear;
        partial void OnFromContentYearChanging(global::System.Decimal value);
        partial void OnFromContentYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> ToContentDate
        {
            get
            {
                return _ToContentDate;
            }
            set
            {
                OnToContentDateChanging(value);
                ReportPropertyChanging("ToContentDate");
                _ToContentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToContentDate");
                OnToContentDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _ToContentDate;
        partial void OnToContentDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnToContentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ToContentYear
        {
            get
            {
                return _ToContentYear;
            }
            set
            {
                OnToContentYearChanging(value);
                ReportPropertyChanging("ToContentYear");
                _ToContentYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToContentYear");
                OnToContentYearChanged();
            }
        }
        private global::System.Decimal _ToContentYear;
        partial void OnToContentYearChanging(global::System.Decimal value);
        partial void OnToContentYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentTimelineID
        {
            get
            {
                return _ParentTimelineID;
            }
            set
            {
                OnParentTimelineIDChanging(value);
                ReportPropertyChanging("ParentTimelineID");
                _ParentTimelineID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentTimelineID");
                OnParentTimelineIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentTimelineID;
        partial void OnParentTimelineIDChanging(Nullable<global::System.Guid> value);
        partial void OnParentTimelineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVisible
        {
            get
            {
                return _IsVisible;
            }
            set
            {
                OnIsVisibleChanging(value);
                ReportPropertyChanging("IsVisible");
                _IsVisible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVisible");
                OnIsVisibleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsVisible;
        partial void OnIsVisibleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FromTimeUnit
        {
            get
            {
                return _FromTimeUnit;
            }
            set
            {
                OnFromTimeUnitChanging(value);
                ReportPropertyChanging("FromTimeUnit");
                _FromTimeUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromTimeUnit");
                OnFromTimeUnitChanged();
            }
        }
        private global::System.Guid _FromTimeUnit;
        partial void OnFromTimeUnitChanging(global::System.Guid value);
        partial void OnFromTimeUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ToTimeUnit
        {
            get
            {
                return _ToTimeUnit;
            }
            set
            {
                OnToTimeUnitChanging(value);
                ReportPropertyChanging("ToTimeUnit");
                _ToTimeUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToTimeUnit");
                OnToTimeUnitChanged();
            }
        }
        private global::System.Guid _ToTimeUnit;
        partial void OnToTimeUnitChanging(global::System.Guid value);
        partial void OnToTimeUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceURL
        {
            get
            {
                return _SourceURL;
            }
            set
            {
                OnSourceURLChanging(value);
                ReportPropertyChanging("SourceURL");
                _SourceURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceURL");
                OnSourceURLChanged();
            }
        }
        private global::System.String _SourceURL;
        partial void OnSourceURLChanging(global::System.String value);
        partial void OnSourceURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Attribution
        {
            get
            {
                return _Attribution;
            }
            set
            {
                OnAttributionChanging(value);
                ReportPropertyChanging("Attribution");
                _Attribution = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Attribution");
                OnAttributionChanged();
            }
        }
        private global::System.String _Attribution;
        partial void OnAttributionChanging(global::System.String value);
        partial void OnAttributionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UniqueID
        {
            get
            {
                return _UniqueID;
            }
            set
            {
                OnUniqueIDChanging(value);
                ReportPropertyChanging("UniqueID");
                _UniqueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueID");
                OnUniqueIDChanged();
            }
        }
        private global::System.Int32 _UniqueID;
        partial void OnUniqueIDChanging(global::System.Int32 value);
        partial void OnUniqueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private Nullable<global::System.Int32> _Sequence;
        partial void OnSequenceChanging(Nullable<global::System.Int32> value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private Nullable<global::System.Decimal> _Height;
        partial void OnHeightChanging(Nullable<global::System.Decimal> value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Timeline_Regime", "Regime")]
        public Regime Regime
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regime>("ChronozoomModel.FK_Timeline_Regime", "Regime").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regime>("ChronozoomModel.FK_Timeline_Regime", "Regime").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Regime> RegimeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regime>("ChronozoomModel.FK_Timeline_Regime", "Regime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Regime>("ChronozoomModel.FK_Timeline_Regime", "Regime", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Timeline_Threshold", "Threshold")]
        public Threshold Threshold
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Threshold>("ChronozoomModel.FK_Timeline_Threshold", "Threshold").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Threshold>("ChronozoomModel.FK_Timeline_Threshold", "Threshold").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Threshold> ThresholdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Threshold>("ChronozoomModel.FK_Timeline_Threshold", "Threshold");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Threshold>("ChronozoomModel.FK_Timeline_Threshold", "Threshold", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Timeline_Timeline", "Timeline1")]
        public EntityCollection<Timeline> Timeline1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Timeline>("ChronozoomModel.FK_Timeline_Timeline", "Timeline1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Timeline>("ChronozoomModel.FK_Timeline_Timeline", "Timeline1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Timeline_Timeline", "Timeline")]
        public Timeline Timeline2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Timeline>("ChronozoomModel.FK_Timeline_Timeline", "Timeline").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Timeline>("ChronozoomModel.FK_Timeline_Timeline", "Timeline").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Timeline> Timeline2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Timeline>("ChronozoomModel.FK_Timeline_Timeline", "Timeline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Timeline>("ChronozoomModel.FK_Timeline_Timeline", "Timeline", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Timeline_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Timeline_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Timeline_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Timeline_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Timeline_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Timeline_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Timeline_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Timeline_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Timeline_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Timeline_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TimelineExhibit_Timeline", "TimelineExhibit")]
        public EntityCollection<TimelineExhibit> TimelineExhibits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineExhibit>("ChronozoomModel.FK_TimelineExhibit_Timeline", "TimelineExhibit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineExhibit>("ChronozoomModel.FK_TimelineExhibit_Timeline", "TimelineExhibit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Timeline_FromTimeUnit", "TimeUnit")]
        public TimeUnit TimeUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_Timeline_FromTimeUnit", "TimeUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_Timeline_FromTimeUnit", "TimeUnit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TimeUnit> TimeUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_Timeline_FromTimeUnit", "TimeUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TimeUnit>("ChronozoomModel.FK_Timeline_FromTimeUnit", "TimeUnit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Timeline_ToTimeUnit", "TimeUnit")]
        public TimeUnit TimeUnit1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_Timeline_ToTimeUnit", "TimeUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_Timeline_ToTimeUnit", "TimeUnit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TimeUnit> TimeUnit1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeUnit>("ChronozoomModel.FK_Timeline_ToTimeUnit", "TimeUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TimeUnit>("ChronozoomModel.FK_Timeline_ToTimeUnit", "TimeUnit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="TimelineExhibit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimelineExhibit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimelineExhibit object.
        /// </summary>
        /// <param name="timelineExhibitID">Initial value of the TimelineExhibitID property.</param>
        /// <param name="timelineID">Initial value of the TimelineID property.</param>
        /// <param name="exhibitID">Initial value of the ExhibitID property.</param>
        public static TimelineExhibit CreateTimelineExhibit(global::System.Guid timelineExhibitID, global::System.Guid timelineID, global::System.Guid exhibitID)
        {
            TimelineExhibit timelineExhibit = new TimelineExhibit();
            timelineExhibit.TimelineExhibitID = timelineExhibitID;
            timelineExhibit.TimelineID = timelineID;
            timelineExhibit.ExhibitID = exhibitID;
            return timelineExhibit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TimelineExhibitID
        {
            get
            {
                return _TimelineExhibitID;
            }
            set
            {
                if (_TimelineExhibitID != value)
                {
                    OnTimelineExhibitIDChanging(value);
                    ReportPropertyChanging("TimelineExhibitID");
                    _TimelineExhibitID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TimelineExhibitID");
                    OnTimelineExhibitIDChanged();
                }
            }
        }
        private global::System.Guid _TimelineExhibitID;
        partial void OnTimelineExhibitIDChanging(global::System.Guid value);
        partial void OnTimelineExhibitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TimelineID
        {
            get
            {
                return _TimelineID;
            }
            set
            {
                OnTimelineIDChanging(value);
                ReportPropertyChanging("TimelineID");
                _TimelineID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimelineID");
                OnTimelineIDChanged();
            }
        }
        private global::System.Guid _TimelineID;
        partial void OnTimelineIDChanging(global::System.Guid value);
        partial void OnTimelineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExhibitID
        {
            get
            {
                return _ExhibitID;
            }
            set
            {
                OnExhibitIDChanging(value);
                ReportPropertyChanging("ExhibitID");
                _ExhibitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExhibitID");
                OnExhibitIDChanged();
            }
        }
        private global::System.Guid _ExhibitID;
        partial void OnExhibitIDChanging(global::System.Guid value);
        partial void OnExhibitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TimelineExhibit_Exhibit", "Exhibit")]
        public Exhibit Exhibit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exhibit>("ChronozoomModel.FK_TimelineExhibit_Exhibit", "Exhibit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exhibit>("ChronozoomModel.FK_TimelineExhibit_Exhibit", "Exhibit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Exhibit> ExhibitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exhibit>("ChronozoomModel.FK_TimelineExhibit_Exhibit", "Exhibit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Exhibit>("ChronozoomModel.FK_TimelineExhibit_Exhibit", "Exhibit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TimelineExhibit_Timeline", "Timeline")]
        public Timeline Timeline
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Timeline>("ChronozoomModel.FK_TimelineExhibit_Timeline", "Timeline").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Timeline>("ChronozoomModel.FK_TimelineExhibit_Timeline", "Timeline").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Timeline> TimelineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Timeline>("ChronozoomModel.FK_TimelineExhibit_Timeline", "Timeline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Timeline>("ChronozoomModel.FK_TimelineExhibit_Timeline", "Timeline", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TimelineExhibit_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TimelineExhibit_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TimelineExhibit_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TimelineExhibit_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_TimelineExhibit_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TimelineExhibit_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TimelineExhibit_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TimelineExhibit_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TimelineExhibit_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_TimelineExhibit_User1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="TimeUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimeUnit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimeUnit object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="timeUnit1">Initial value of the TimeUnit1 property.</param>
        public static TimeUnit CreateTimeUnit(global::System.Guid id, global::System.String timeUnit1)
        {
            TimeUnit timeUnit = new TimeUnit();
            timeUnit.ID = id;
            timeUnit.TimeUnit1 = timeUnit1;
            return timeUnit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TimeUnit1
        {
            get
            {
                return _TimeUnit1;
            }
            set
            {
                OnTimeUnit1Changing(value);
                ReportPropertyChanging("TimeUnit1");
                _TimeUnit1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TimeUnit1");
                OnTimeUnit1Changed();
            }
        }
        private global::System.String _TimeUnit1;
        partial void OnTimeUnit1Changing(global::System.String value);
        partial void OnTimeUnit1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentItem_TimeUnit", "ContentItem")]
        public EntityCollection<ContentItem> ContentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentItem>("ChronozoomModel.FK_ContentItem_TimeUnit", "ContentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentItem>("ChronozoomModel.FK_ContentItem_TimeUnit", "ContentItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TimeUnit_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TimeUnit_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TimeUnit_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TimeUnit_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_TimeUnit_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TimeUnit_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TimeUnit_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TimeUnit_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TimeUnit_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_TimeUnit_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Exhibit_TimeUnit", "Exhibit")]
        public EntityCollection<Exhibit> Exhibits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Exhibit>("ChronozoomModel.FK_Exhibit_TimeUnit", "Exhibit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Exhibit>("ChronozoomModel.FK_Exhibit_TimeUnit", "Exhibit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Timeline_FromTimeUnit", "Timeline")]
        public EntityCollection<Timeline> Timelines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Timeline>("ChronozoomModel.FK_Timeline_FromTimeUnit", "Timeline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Timeline>("ChronozoomModel.FK_Timeline_FromTimeUnit", "Timeline", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Timeline_ToTimeUnit", "Timeline")]
        public EntityCollection<Timeline> Timelines1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Timeline>("ChronozoomModel.FK_Timeline_ToTimeUnit", "Timeline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Timeline>("ChronozoomModel.FK_Timeline_ToTimeUnit", "Timeline", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Threshold_FromTimeUnit", "Threshold")]
        public EntityCollection<Threshold> Thresholds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Threshold>("ChronozoomModel.FK_Threshold_FromTimeUnit", "Threshold");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Threshold>("ChronozoomModel.FK_Threshold_FromTimeUnit", "Threshold", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="Tour")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tour : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tour object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="uniqueID">Initial value of the UniqueID property.</param>
        public static Tour CreateTour(global::System.Guid id, global::System.String name, global::System.Int32 uniqueID)
        {
            Tour tour = new Tour();
            tour.ID = id;
            tour.Name = name;
            tour.UniqueID = uniqueID;
            return tour;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UniqueID
        {
            get
            {
                return _UniqueID;
            }
            set
            {
                OnUniqueIDChanging(value);
                ReportPropertyChanging("UniqueID");
                _UniqueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueID");
                OnUniqueIDChanged();
            }
        }
        private global::System.Int32 _UniqueID;
        partial void OnUniqueIDChanging(global::System.Int32 value);
        partial void OnUniqueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AudioBlobUrl
        {
            get
            {
                return _AudioBlobUrl;
            }
            set
            {
                OnAudioBlobUrlChanging(value);
                ReportPropertyChanging("AudioBlobUrl");
                _AudioBlobUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AudioBlobUrl");
                OnAudioBlobUrlChanged();
            }
        }
        private global::System.String _AudioBlobUrl;
        partial void OnAudioBlobUrlChanging(global::System.String value);
        partial void OnAudioBlobUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private Nullable<global::System.Int32> _Sequence;
        partial void OnSequenceChanging(Nullable<global::System.Int32> value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVisible
        {
            get
            {
                return _IsVisible;
            }
            set
            {
                OnIsVisibleChanging(value);
                ReportPropertyChanging("IsVisible");
                _IsVisible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVisible");
                OnIsVisibleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsVisible;
        partial void OnIsVisibleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVisibleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Tour_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Tour_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Tour_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Tour_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Tour_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Tour_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Tour_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Tour_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_Tour_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_Tour_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TourBookmark_Tour", "TourBookmark")]
        public EntityCollection<TourBookmark> TourBookmarks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TourBookmark>("ChronozoomModel.FK_TourBookmark_Tour", "TourBookmark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TourBookmark>("ChronozoomModel.FK_TourBookmark_Tour", "TourBookmark", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="TourBookmark")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TourBookmark : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TourBookmark object.
        /// </summary>
        /// <param name="tourBookmarkID">Initial value of the TourBookmarkID property.</param>
        /// <param name="tourID">Initial value of the TourID property.</param>
        /// <param name="bookmarkID">Initial value of the BookmarkID property.</param>
        /// <param name="sequenceNumber">Initial value of the SequenceNumber property.</param>
        public static TourBookmark CreateTourBookmark(global::System.Guid tourBookmarkID, global::System.Guid tourID, global::System.Guid bookmarkID, global::System.Int16 sequenceNumber)
        {
            TourBookmark tourBookmark = new TourBookmark();
            tourBookmark.TourBookmarkID = tourBookmarkID;
            tourBookmark.TourID = tourID;
            tourBookmark.BookmarkID = bookmarkID;
            tourBookmark.SequenceNumber = sequenceNumber;
            return tourBookmark;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TourBookmarkID
        {
            get
            {
                return _TourBookmarkID;
            }
            set
            {
                if (_TourBookmarkID != value)
                {
                    OnTourBookmarkIDChanging(value);
                    ReportPropertyChanging("TourBookmarkID");
                    _TourBookmarkID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TourBookmarkID");
                    OnTourBookmarkIDChanged();
                }
            }
        }
        private global::System.Guid _TourBookmarkID;
        partial void OnTourBookmarkIDChanging(global::System.Guid value);
        partial void OnTourBookmarkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TourID
        {
            get
            {
                return _TourID;
            }
            set
            {
                OnTourIDChanging(value);
                ReportPropertyChanging("TourID");
                _TourID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TourID");
                OnTourIDChanged();
            }
        }
        private global::System.Guid _TourID;
        partial void OnTourIDChanging(global::System.Guid value);
        partial void OnTourIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BookmarkID
        {
            get
            {
                return _BookmarkID;
            }
            set
            {
                OnBookmarkIDChanging(value);
                ReportPropertyChanging("BookmarkID");
                _BookmarkID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookmarkID");
                OnBookmarkIDChanged();
            }
        }
        private global::System.Guid _BookmarkID;
        partial void OnBookmarkIDChanging(global::System.Guid value);
        partial void OnBookmarkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 SequenceNumber
        {
            get
            {
                return _SequenceNumber;
            }
            set
            {
                OnSequenceNumberChanging(value);
                ReportPropertyChanging("SequenceNumber");
                _SequenceNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SequenceNumber");
                OnSequenceNumberChanged();
            }
        }
        private global::System.Int16 _SequenceNumber;
        partial void OnSequenceNumberChanging(global::System.Int16 value);
        partial void OnSequenceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVisible
        {
            get
            {
                return _IsVisible;
            }
            set
            {
                OnIsVisibleChanging(value);
                ReportPropertyChanging("IsVisible");
                _IsVisible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVisible");
                OnIsVisibleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsVisible;
        partial void OnIsVisibleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVisibleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TourBookmark_Bookmark", "BookMark")]
        public BookMark BookMark
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BookMark>("ChronozoomModel.FK_TourBookmark_Bookmark", "BookMark").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BookMark>("ChronozoomModel.FK_TourBookmark_Bookmark", "BookMark").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BookMark> BookMarkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BookMark>("ChronozoomModel.FK_TourBookmark_Bookmark", "BookMark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BookMark>("ChronozoomModel.FK_TourBookmark_Bookmark", "BookMark", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TourBookmark_Tour", "Tour")]
        public Tour Tour
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tour>("ChronozoomModel.FK_TourBookmark_Tour", "Tour").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tour>("ChronozoomModel.FK_TourBookmark_Tour", "Tour").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tour> TourReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tour>("ChronozoomModel.FK_TourBookmark_Tour", "Tour");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tour>("ChronozoomModel.FK_TourBookmark_Tour", "Tour", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TourBookmark_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TourBookmark_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TourBookmark_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TourBookmark_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_TourBookmark_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TourBookmark_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TourBookmark_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TourBookmark_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_TourBookmark_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_TourBookmark_User1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChronozoomModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        public static User CreateUser(global::System.Guid id, global::System.String userName, global::System.String password, global::System.String firstName, global::System.String lastName, global::System.String emailAddress, global::System.Guid roleID)
        {
            User user = new User();
            user.ID = id;
            user.UserName = userName;
            user.Password = password;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.EmailAddress = emailAddress;
            user.RoleID = roleID;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Guid _RoleID;
        partial void OnRoleIDChanging(global::System.Guid value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrVersion
        {
            get
            {
                return _CurrVersion;
            }
            set
            {
                OnCurrVersionChanging(value);
                ReportPropertyChanging("CurrVersion");
                _CurrVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrVersion");
                OnCurrVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrVersion;
        partial void OnCurrVersionChanging(Nullable<global::System.Int32> value);
        partial void OnCurrVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_AuthoringTable_User", "AuthoringTable")]
        public EntityCollection<AuthoringTable> AuthoringTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthoringTable>("ChronozoomModel.FK_AuthoringTable_User", "AuthoringTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthoringTable>("ChronozoomModel.FK_AuthoringTable_User", "AuthoringTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_AuthoringTable_User1", "AuthoringTable")]
        public EntityCollection<AuthoringTable> AuthoringTables1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthoringTable>("ChronozoomModel.FK_AuthoringTable_User1", "AuthoringTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthoringTable>("ChronozoomModel.FK_AuthoringTable_User1", "AuthoringTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_AuthoringTableRolePermission_User", "AuthoringTableRolePermission")]
        public EntityCollection<AuthoringTableRolePermission> AuthoringTableRolePermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthoringTableRolePermission>("ChronozoomModel.FK_AuthoringTableRolePermission_User", "AuthoringTableRolePermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthoringTableRolePermission>("ChronozoomModel.FK_AuthoringTableRolePermission_User", "AuthoringTableRolePermission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_AuthoringTableRolePermission_User1", "AuthoringTableRolePermission")]
        public EntityCollection<AuthoringTableRolePermission> AuthoringTableRolePermissions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthoringTableRolePermission>("ChronozoomModel.FK_AuthoringTableRolePermission_User1", "AuthoringTableRolePermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthoringTableRolePermission>("ChronozoomModel.FK_AuthoringTableRolePermission_User1", "AuthoringTableRolePermission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentItem_User", "ContentItem")]
        public EntityCollection<ContentItem> ContentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentItem>("ChronozoomModel.FK_ContentItem_User", "ContentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentItem>("ChronozoomModel.FK_ContentItem_User", "ContentItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentItem_User1", "ContentItem")]
        public EntityCollection<ContentItem> ContentItems1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentItem>("ChronozoomModel.FK_ContentItem_User1", "ContentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentItem>("ChronozoomModel.FK_ContentItem_User1", "ContentItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentKeyword_User", "ContentKeyword")]
        public EntityCollection<ContentKeyword> ContentKeywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentKeyword>("ChronozoomModel.FK_ContentKeyword_User", "ContentKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentKeyword>("ChronozoomModel.FK_ContentKeyword_User", "ContentKeyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ContentKeyword_User1", "ContentKeyword")]
        public EntityCollection<ContentKeyword> ContentKeywords1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentKeyword>("ChronozoomModel.FK_ContentKeyword_User1", "ContentKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentKeyword>("ChronozoomModel.FK_ContentKeyword_User1", "ContentKeyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Keyword_User", "Keyword")]
        public EntityCollection<Keyword> Keywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Keyword>("ChronozoomModel.FK_Keyword_User", "Keyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Keyword>("ChronozoomModel.FK_Keyword_User", "Keyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Keyword_User1", "Keyword")]
        public EntityCollection<Keyword> Keywords1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Keyword>("ChronozoomModel.FK_Keyword_User1", "Keyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Keyword>("ChronozoomModel.FK_Keyword_User1", "Keyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_LicenseType_User", "LicenseType")]
        public EntityCollection<LicenseType> LicenseTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LicenseType>("ChronozoomModel.FK_LicenseType_User", "LicenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LicenseType>("ChronozoomModel.FK_LicenseType_User", "LicenseType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_LicenseType_User1", "LicenseType")]
        public EntityCollection<LicenseType> LicenseTypes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LicenseType>("ChronozoomModel.FK_LicenseType_User1", "LicenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LicenseType>("ChronozoomModel.FK_LicenseType_User1", "LicenseType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_MediaType_User", "MediaType")]
        public EntityCollection<MediaType> MediaTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MediaType>("ChronozoomModel.FK_MediaType_User", "MediaType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MediaType>("ChronozoomModel.FK_MediaType_User", "MediaType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_MediaType_User1", "MediaType")]
        public EntityCollection<MediaType> MediaTypes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MediaType>("ChronozoomModel.FK_MediaType_User1", "MediaType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MediaType>("ChronozoomModel.FK_MediaType_User1", "MediaType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Permission_User", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("ChronozoomModel.FK_Permission_User", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("ChronozoomModel.FK_Permission_User", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Permission_User1", "Permission")]
        public EntityCollection<Permission> Permissions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("ChronozoomModel.FK_Permission_User1", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("ChronozoomModel.FK_Permission_User1", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Regime_User", "Regime")]
        public EntityCollection<Regime> Regimes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Regime>("ChronozoomModel.FK_Regime_User", "Regime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Regime>("ChronozoomModel.FK_Regime_User", "Regime", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Regime_User1", "Regime")]
        public EntityCollection<Regime> Regimes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Regime>("ChronozoomModel.FK_Regime_User1", "Regime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Regime>("ChronozoomModel.FK_Regime_User1", "Regime", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Role_User", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("ChronozoomModel.FK_Role_User", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("ChronozoomModel.FK_Role_User", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Role_User1", "Role")]
        public EntityCollection<Role> Roles1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("ChronozoomModel.FK_Role_User1", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("ChronozoomModel.FK_Role_User1", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_User_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ChronozoomModel.FK_User_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ChronozoomModel.FK_User_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ChronozoomModel.FK_User_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("ChronozoomModel.FK_User_Role", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Threshold_User", "Threshold")]
        public EntityCollection<Threshold> Thresholds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Threshold>("ChronozoomModel.FK_Threshold_User", "Threshold");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Threshold>("ChronozoomModel.FK_Threshold_User", "Threshold", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Threshold_User1", "Threshold")]
        public EntityCollection<Threshold> Thresholds1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Threshold>("ChronozoomModel.FK_Threshold_User1", "Threshold");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Threshold>("ChronozoomModel.FK_Threshold_User1", "Threshold", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TimeUnit_User", "TimeUnit")]
        public EntityCollection<TimeUnit> TimeUnits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeUnit>("ChronozoomModel.FK_TimeUnit_User", "TimeUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeUnit>("ChronozoomModel.FK_TimeUnit_User", "TimeUnit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TimeUnit_User1", "TimeUnit")]
        public EntityCollection<TimeUnit> TimeUnits1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeUnit>("ChronozoomModel.FK_TimeUnit_User1", "TimeUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeUnit>("ChronozoomModel.FK_TimeUnit_User1", "TimeUnit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_User_User", "User1")]
        public EntityCollection<User> User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("ChronozoomModel.FK_User_User", "User1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("ChronozoomModel.FK_User_User", "User1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_User_User", "User")]
        public User User2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_User_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_User_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_User_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_User_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_User_User1", "User1")]
        public EntityCollection<User> User11
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("ChronozoomModel.FK_User_User1", "User1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("ChronozoomModel.FK_User_User1", "User1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_User_User1", "User")]
        public User User3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_User_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_User_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChronozoomModel.FK_User_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChronozoomModel.FK_User_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_CitationType_User", "CitationType")]
        public EntityCollection<CitationType> CitationTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CitationType>("ChronozoomModel.FK_CitationType_User", "CitationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CitationType>("ChronozoomModel.FK_CitationType_User", "CitationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_CitationType_User1", "CitationType")]
        public EntityCollection<CitationType> CitationTypes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CitationType>("ChronozoomModel.FK_CitationType_User1", "CitationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CitationType>("ChronozoomModel.FK_CitationType_User1", "CitationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Exhibit_User", "Exhibit")]
        public EntityCollection<Exhibit> Exhibits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Exhibit>("ChronozoomModel.FK_Exhibit_User", "Exhibit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Exhibit>("ChronozoomModel.FK_Exhibit_User", "Exhibit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Exhibit_User1", "Exhibit")]
        public EntityCollection<Exhibit> Exhibits1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Exhibit>("ChronozoomModel.FK_Exhibit_User1", "Exhibit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Exhibit>("ChronozoomModel.FK_Exhibit_User1", "Exhibit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitContentItem_User", "ExhibitContentItem")]
        public EntityCollection<ExhibitContentItem> ExhibitContentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExhibitContentItem>("ChronozoomModel.FK_ExhibitContentItem_User", "ExhibitContentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExhibitContentItem>("ChronozoomModel.FK_ExhibitContentItem_User", "ExhibitContentItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitContentItem_User1", "ExhibitContentItem")]
        public EntityCollection<ExhibitContentItem> ExhibitContentItems1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExhibitContentItem>("ChronozoomModel.FK_ExhibitContentItem_User1", "ExhibitContentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExhibitContentItem>("ChronozoomModel.FK_ExhibitContentItem_User1", "ExhibitContentItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitKeyword_User", "ExhibitKeyword")]
        public EntityCollection<ExhibitKeyword> ExhibitKeywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExhibitKeyword>("ChronozoomModel.FK_ExhibitKeyword_User", "ExhibitKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExhibitKeyword>("ChronozoomModel.FK_ExhibitKeyword_User", "ExhibitKeyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitKeyword_User1", "ExhibitKeyword")]
        public EntityCollection<ExhibitKeyword> ExhibitKeywords1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExhibitKeyword>("ChronozoomModel.FK_ExhibitKeyword_User1", "ExhibitKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExhibitKeyword>("ChronozoomModel.FK_ExhibitKeyword_User1", "ExhibitKeyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Reference_User", "Reference")]
        public EntityCollection<Reference> References
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reference>("ChronozoomModel.FK_Reference_User", "Reference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reference>("ChronozoomModel.FK_Reference_User", "Reference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Reference_User1", "Reference")]
        public EntityCollection<Reference> References1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reference>("ChronozoomModel.FK_Reference_User1", "Reference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reference>("ChronozoomModel.FK_Reference_User1", "Reference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ReferenceKeyword_User", "ReferenceKeyword")]
        public EntityCollection<ReferenceKeyword> ReferenceKeywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReferenceKeyword>("ChronozoomModel.FK_ReferenceKeyword_User", "ReferenceKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReferenceKeyword>("ChronozoomModel.FK_ReferenceKeyword_User", "ReferenceKeyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ReferenceKeyword_User1", "ReferenceKeyword")]
        public EntityCollection<ReferenceKeyword> ReferenceKeywords1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReferenceKeyword>("ChronozoomModel.FK_ReferenceKeyword_User1", "ReferenceKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReferenceKeyword>("ChronozoomModel.FK_ReferenceKeyword_User1", "ReferenceKeyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Timeline_User", "Timeline")]
        public EntityCollection<Timeline> Timelines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Timeline>("ChronozoomModel.FK_Timeline_User", "Timeline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Timeline>("ChronozoomModel.FK_Timeline_User", "Timeline", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Timeline_User1", "Timeline")]
        public EntityCollection<Timeline> Timelines1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Timeline>("ChronozoomModel.FK_Timeline_User1", "Timeline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Timeline>("ChronozoomModel.FK_Timeline_User1", "Timeline", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TimelineExhibit_User", "TimelineExhibit")]
        public EntityCollection<TimelineExhibit> TimelineExhibits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineExhibit>("ChronozoomModel.FK_TimelineExhibit_User", "TimelineExhibit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineExhibit>("ChronozoomModel.FK_TimelineExhibit_User", "TimelineExhibit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TimelineExhibit_User1", "TimelineExhibit")]
        public EntityCollection<TimelineExhibit> TimelineExhibits1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineExhibit>("ChronozoomModel.FK_TimelineExhibit_User1", "TimelineExhibit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineExhibit>("ChronozoomModel.FK_TimelineExhibit_User1", "TimelineExhibit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_BookMark_User", "BookMark")]
        public EntityCollection<BookMark> BookMarks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BookMark>("ChronozoomModel.FK_BookMark_User", "BookMark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BookMark>("ChronozoomModel.FK_BookMark_User", "BookMark", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_BookMark_User1", "BookMark")]
        public EntityCollection<BookMark> BookMarks1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BookMark>("ChronozoomModel.FK_BookMark_User1", "BookMark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BookMark>("ChronozoomModel.FK_BookMark_User1", "BookMark", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Tour_User", "Tour")]
        public EntityCollection<Tour> Tours
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tour>("ChronozoomModel.FK_Tour_User", "Tour");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tour>("ChronozoomModel.FK_Tour_User", "Tour", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_Tour_User1", "Tour")]
        public EntityCollection<Tour> Tours1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tour>("ChronozoomModel.FK_Tour_User1", "Tour");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tour>("ChronozoomModel.FK_Tour_User1", "Tour", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TourBookmark_User", "TourBookmark")]
        public EntityCollection<TourBookmark> TourBookmarks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TourBookmark>("ChronozoomModel.FK_TourBookmark_User", "TourBookmark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TourBookmark>("ChronozoomModel.FK_TourBookmark_User", "TourBookmark", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_TourBookmark_User1", "TourBookmark")]
        public EntityCollection<TourBookmark> TourBookmarks1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TourBookmark>("ChronozoomModel.FK_TourBookmark_User1", "TourBookmark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TourBookmark>("ChronozoomModel.FK_TourBookmark_User1", "TourBookmark", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitReference_User", "ExhibitReference")]
        public EntityCollection<ExhibitReferenceEntity> ExhibitReferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExhibitReferenceEntity>("ChronozoomModel.FK_ExhibitReference_User", "ExhibitReference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExhibitReferenceEntity>("ChronozoomModel.FK_ExhibitReference_User", "ExhibitReference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChronozoomModel", "FK_ExhibitReference_User1", "ExhibitReference")]
        public EntityCollection<ExhibitReferenceEntity> ExhibitReferences1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExhibitReferenceEntity>("ChronozoomModel.FK_ExhibitReference_User1", "ExhibitReference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExhibitReferenceEntity>("ChronozoomModel.FK_ExhibitReference_User1", "ExhibitReference", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
